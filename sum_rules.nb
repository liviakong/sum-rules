(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    136940,       2855]
NotebookOptionsPosition[    134526,       2819]
NotebookOutlinePosition[    134957,       2836]
CellTagsIndexPosition[    134914,       2833]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<ASRs`\>\"", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.965430596005556*^9, 3.9654306054256306`*^9}, 
   3.965431487585346*^9, {3.965431695058737*^9, 3.9654316957862053`*^9}, {
   3.965436674649887*^9, 3.965436675068756*^9}, {3.966813720543049*^9, 
   3.966813725539713*^9}, {3.966813765189234*^9, 
   3.9668137888759785`*^9}},ExpressionUUID->"d7755607-cbd2-374e-ad05-\
ec3d71bc527b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ASRsHelp", "::", "usage"}], 
   "=", "\"\<ASRsHelp[function] prints extended documentation on a function's \
arguments, options, and outputs.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ASRsHelp", "::", "details"}], "=", 
   "\n", "\"\<Arguments:\nfunction (Symbol): The name of a function from the \
ASRs Mathematica package.\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"startPythonSession", "::", "usage"}], 
   "=", "\"\<startPythonSession[session,path] checks for a valid Python \
session and file path and loads in the Python file.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"startPythonSession", "::", "details"}], "=", 
   "\n", "\"\<Arguments:\nsession (ExternalSessionObject): An active external \
Python session.\npath (String): Path to the sum_rules.py Python file.\n\n\
Returns:\nAn ExternalFunction object indicating the sum_rules.py file has \
been loaded into the Python session.\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"generateASRs", "::", "usage"}], 
   "=", "\"\<generateASRs[in,h,out] finds all amplitudes and amplitude sum \
rules (ASRs) for a given system.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"generateASRs", "::", "details"}], "=", 
    "\n", "\"\<Arguments:\nin (List): Contains U-spins (Real) OR particle \
multiplets (List of Strings) in the incoming state.\nh (List): Contains \
U-spins (Real) OR CKM factors (List of Symbols) in the Hamiltonian.\nout \
(List): Contains U-spins (Real) OR particle multiplets (List of Strings) in \
the outgoing state.\n\nOptions:\nphys (True|False): Indicates whether \
function arguments contain U-spins (False) or particle multiplets/CKM factors \
(True). Default: phys->False.\n\nReturns:\nsystem (Association): All \
information about the system's representations, amplitudes, and amplitude sum \
rules. Keys and values:\n- \\\"Irreps\\\" (List): Inputted U-spin \
representations (List of Reals) in {incoming reps, H reps, outgoing reps} \
format.\n- \\\"n doublets\\\" (Real): Number of would-be doublets.\n- \\\"p \
factor\\\" (Real): (-1)^p parity factor for the system determining forms of \
a/s-type amplitudes.\n- \\\"n amps\\\" (Real): Number of amplitudes in the \
system.\n- \\\"Amplitudes\\\" (Association): Contains all amplitudes in the \
system. Keys and values:\n\t- \\\"Processes\\\" (List): Contains physical \
processes constructed from particle names (String) for a process and its \
U-spin conjugate process. Only available for physical systems.\n\t- \\\"QNs\\\
\" (List): Contains processes written using m quantum numbers (String), where \
m is the third component of U-spin, for a process and its U-spin conjugate \
process.\n\t- \\\"n-tuple\\\" (String): Representation of an amplitude pair \
using a comma-separated tuple of substrings. Each substring is comprised of \
'-'s and '+'s and encodes u and m QNs of a component of a participating \
multiplet. Signs are inverted for initial state and Hamiltonian components. \
By convention, one n-tuple (beginning with a '-' sign) is used to represent \
an amplitude pair: an amplitude and its U-spin conjugate amplitude.\n\t- \
\\\"Node\\\" (String): Representation of an amplitude pair using the \
coordinate notation of the lattice used to derive sum rules.\n\t- \\\"Binary \
indices\\\" (List): Contains indices (Real), written in base 10, derived from \
converting the n-tuple and its U-spin conjugate into binary numbers through \
'-' <-> 0 and '+' <-> 1.\n\t- \\\"mu\\\" (Real): mu-factor for the node in \
the lattice used to derive sum rules.\n\t- \\\"CG\\\" (Real): Clebsch-Gordan \
coefficient from symmetrization for systems without doublets. Equal to 1 for \
all amplitudes for a system with at least one doublet.\n\t- \\\"CKM\\\" \
(List): Contains weak interaction factors (Real) from the Hamiltonian. Only \
appears for physical systems.\n- \\\"n ASRs\\\" (List): Contains the number \
of amplitude sum rules (Real) at each order of breaking.\n- \\\"ASRs\\\" \
(List): Contains matrices of amplitude sum rule coefficients (Real) \
corresponding to each order of breaking.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numAmps", "::", "usage"}], 
   "=", "\"\<numAmps[system] returns the total number of amplitudes in the \
system.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"numAmps", "::", "details"}], "=", 
    "\n", "\"\<Arguments:\nsystem (Association): A system association. See \
the documentation for generateASRs for details.\n\nOptions:\nnPairs \
(True|False): Indicates whether to return the number of amplitudes (False) or \
amplitude pairs (True). Default: nPairs: False.\n\nReturns:\nThe total number \
of amplitudes or amplitude pairs in the system (Real).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"labelAmps", "::", "usage"}], 
  "=", "\"\<labelAmps[system,colName,labels] modifies system to add a column \
of user-defined labels to system[[\\\"Amplitudes\\\"]].\>\""}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"labelAmps", "::", "details"}], "=", 
    "\n", "\"\<Arguments:\nsystem (Association): A system association. See \
the documentation for generateASRs for details.\ncolName (String): Name of \
new column to add to amplitudes association.\nlabels (List): Contains labels \
(Any) for each amplitude or amplitude pair. Number of labels must equal \
number of amplitudes or amplitude pairs.\n\nOptions:\nlabeling (String): \
Labeling mode to indicate whether user is labeling single amplitudes \
(\\\"Amplitudes\\\") or amplitude pairs (\\\"Amplitude pairs\\\"). Default: \
labeling -> \\\"Amplitudes\\\".\n\nReturns:\nsystem[[\\\"Amplitudes\\\"]] \
(Association): The modified amplitudes association which includes a new \
column of user-defined labels. New/modified keys and values:\n- colName \
(List|Any): Either contains user-defined labels (Any) for an amplitude and \
its U-spin conjugate or a single label (Any) for an amplitude pair.\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"unlabelAmps", "::", "usage"}], 
  "=", "\"\<unlabelAmps[system,colNames] modifies system to remove columns \
from system[[\\\"Amplitudes\\\"]].\>\""}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unlabelAmps", "::", "details"}], "=", 
    "\n", "\"\<Arguments:\nsystem (Association): A system association. See \
the documentation for generateASRs for details.\ncolNames (String|List): \
Name(s) of column(s) to remove from amplitudes association.\n\nReturns:\n\
system[[\\\"Amplitudes\\\"]] (Association): The modified amplitudes \
association from which the specified columns have been removed.\>\""}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"printAmps", "::", "usage"}], 
   "=", "\"\<printAmps[system] prints a table of amplitudes.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"printAmps", "::", "details"}], "=", 
    "\n", "\"\<Arguments:\nsystem (Association): A system association. See \
the documentation for generateASRs for details.\n\nOptions:\nshowFactors \
(True|False): Indicates whether to print internal calculation factors from \
the sum rule algorithm in the amplitudes table (True) or not (False). Not to \
be confused with the amplitude sum rule matrices. Default: \
showFactors->False.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numSRs", "::", "usage"}], 
   "=", "\"\<numSRs[system] returns the number of amplitude or squared \
amplitude sum rules at each order of breaking.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"numSRs", "::", "details"}], "=", 
    "\n", "\"\<Arguments:\nsystem (Association): A system association. See \
the documentation for generateASRs for details.\n\nOptions:\nb \
(All|Real|List): Breaking order(s) at which to print sum rules. User can \
print sum rules to all possible orders of breaking (All), at a particular \
order (Real s.t. 0 <= b <= highest order of breaking), or over a range of \
orders of breaking ({start b (min: 0), end b (max: highest order of breaking, \
or All), increment}). Default: b->All.\nsquared (True|False): Indicates \
whether to return number of sum rules of amplitudes (False) or squared \
amplitudes (True). Default: squared->False.\n\nReturns:\nNumber of (squared) \
amplitude sum rules at each order of breaking (List of Reals).\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"printSRs", "::", "usage"}], 
   "=", "\"\<printSRs[system] prints amplitude or squared amplitude sum rules \
at each order of breaking.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"printSRs", "::", "details"}], "=", 
    "\n", "\"\<Arguments:\nsystem (Association): A system association. See \
the documentation for generateASRs for details.\n\nOptions:\nshowSRs \
(True|False): Default: Indicates whether to print sum rules. showSRs->True.\n\
expandSRs (True|False): Indicates whether to write each row of a sum rules \
matrix as an algebraic expression of amplitudes (True) or to keep each row as \
a list of coefficients (False). Default: expandSRs->True.\nampFormat \
(String): Specified format for displaying amplitudes. Options are a/s-type \
amplitudes with n-tuples (\\\"a/s n-tuple\\\"), a/s-type amplitudes with \
numbered indices (\\\"a/s indices\\\"), a/s-type amplitudes with nodes \
(\\\"a/s nodes\\\"), A amplitudes with numbered indices (\\\"A indices\\\"), \
and A amplitudes with physical process (\\\"A physical\\\"). User-defined \
labels for a column of amplitudes (or amplitude pairs) can also be used using \
the syntax \\\"A col\\\" (or \\\"a/s col\\\" for pairs), where \\\"col\\\" is \
the name of the column containing custom labels. Default: ampFormat->\\\"a/s \
n-tuple\\\".\nCKM (True|False): Indicates whether to include CKM factors in \
the sum rules (True) or not (False). Default: CKM->False.\nb (All|Real|List): \
Breaking order(s) at which to print sum rules. User can print sum rules to \
all possible orders of breaking (All), at a particular order (Real s.t. 0 <= \
b <= highest order of breaking), or over a range of orders of breaking \
({start b (min: 0), end b (max: highest order of breaking, or All), \
increment}). Default: b->All.\nsquared (True|False): Indicates whether to \
print amplitude sum rules (False) or squared amplitude sum rules (True). \
Default: squared->False.\n\nReturns:\nsystem[[\\\"Formatted ASRs\\\"]] (or \
system[[\\\"Formatted A2SRs\\\"]]) (List): A new key in the system \
association containing Lists of (squared) amplitude sum rules/matrices of \
(squared) amplitude sum rule coefficients formatted according to the sum rule \
printing settings.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"printSystem", "::", "usage"}], 
   "=", "\"\<printSystem[system] prints information about the system's \
representations, amplitudes, and sum rules and modifies the system to include \
formatted sum rules.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"printSystem", "::", "details"}], "=", 
    "\n", "\"\<Arguments:\nsystem (Association): A system association. See \
the documentation for generateASRs for details.\n\nOptions:\nshowReps \
(True|False): Default: showReps->True.\n-----\nshowAmps (True|False): \
Default: showAmps->True.\nshowFactors (True|False): Indicates whether to \
print internal calculation factors from the sum rule algorithm in the \
amplitudes table (True) or not (False). Not to be confused with the amplitude \
sum rule matrices. Default: showFactors->False.\n-----\nshowASRs \
(True|False): Default: showASRs->True. Note: ASRs and A2SRs use the same \
formatting options.\nshowA2SRs (True|False): Default: showA2SRs->False. Note: \
ASRs and A2SRs use the same formatting options.\nexpandSRs (True|False): \
Indicates whether to write each row of a sum rules matrix as an algebraic \
expression of (squared) amplitudes (True) or to keep each row as a list of \
coefficients (False). Default: expandSRs->True.\nampFormat (String): \
Specified format for displaying (squared) amplitudes. Options are a/s-type \
amplitudes with n-tuples (\\\"a/s n-tuple\\\"), a/s-type amplitudes with \
numbered indices (\\\"a/s indices\\\"), a/s-type amplitudes with nodes \
(\\\"a/s nodes\\\"), A amplitudes with numbered indices (\\\"A indices\\\"), \
and A amplitudes with physical process (\\\"A physical\\\"). Default: \
ampFormat->\\\"a/s n-tuple\\\".\nCKM (True|False): Indicates whether to \
include CKM factors in the sum rules (True) or not (False). Default: \
CKM->False.\nb (All|Real|List): Breaking order(s) at which to print sum \
rules. User can print sum rules to all possible orders of breaking (All), at \
a particular order (Real s.t. 0 <= b <= highest order of breaking), or over a \
range of orders of breaking ({start b (min: 0), end b (max: highest order of \
breaking, or All), increment}). Default: b->All.\n\nReturns:\nsystem \
(Association): The inputted system association, modified to include formatted \
amplitude sum rules. New/modified keys and values:\n- \\\"Formatted ASRs\\\" \
(or \\\"Formatted A2SRs\\\") (List): Contains Lists of (squared) amplitude \
sum rules/matrices of (squared) amplitude sum rule coefficients formatted \
according to the sum rule printing settings.\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"generateA2SRs", "::", "usage"}], 
   "=", "\"\<generateA2SRs[in,h,out] finds all amplitudes, amplitude sum \
rules (ASRs), and squared amplitude sum rules (A2SRs) for a given \
system.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"generateA2SRs", "::", "details"}], "=", 
   "\n", "\"\<Arguments:\nin (List): Contains U-spins (Real) OR particle \
multiplets (List of Strings) in the incoming state.\nh (List): Contains \
U-spins (Real) OR CKM factors (List of Symbols) in the Hamiltonian.\nout \
(List): Contains U-spins (Real) OR particle multiplets (List of Strings) in \
the outgoing state.\n\nOptions:\nphys (True|False): Indicates whether \
function arguments contain U-spins (False) or particle multiplets/CKM factors \
(True). Default: phys->False.\n\nReturns:\nsystem (Association): All \
information about the system's representations, amplitudes, and amplitude sum \
rules. Keys and values:\n- \\\"Irreps\\\" (List): Inputted U-spin \
representations (List of Reals) in {incoming reps, H reps, outgoing reps} \
format.\n- \\\"n doublets\\\" (Real): Number of would-be doublets.\n- \\\"p \
factor\\\" (Real): (-1)^p parity factor for the system determining forms of \
a/s-type amplitudes.\n- \\\"n amps\\\" (Real): Number of amplitudes in the \
system.\n- \\\"Amplitudes\\\" (Association): Contains all amplitudes in the \
system. Keys and values:\n\t- \\\"Processes\\\" (List): Contains physical \
processes constructed from particle names (String) for a process and its \
U-spin conjugate process. Only available for physical systems.\n\t- \\\"QNs\\\
\" (List): Contains processes written using m quantum numbers (String), where \
m is the third component of U-spin, for a process and its U-spin conjugate \
process.\n\t- \\\"n-tuple\\\" (String): Representation of an amplitude pair \
using a comma-separated tuple of substrings. Each substring is comprised of \
'-'s and '+'s and encodes u and m QNs of a component of a participating \
multiplet. Signs are inverted for initial state and Hamiltonian components. \
By convention, one n-tuple (beginning with a '-' sign) is used to represent \
an amplitude pair: an amplitude and its U-spin conjugate amplitude.\n\t- \
\\\"Node\\\" (String): Representation of an amplitude pair using the \
coordinate notation of the lattice used to derive sum rules.\n\t- \\\"Binary \
indices\\\" (List): Contains indices (Real), written in base 10, derived from \
converting the n-tuple and its U-spin conjugate into binary numbers through \
'-' <-> 0 and '+' <-> 1.\n\t- \\\"mu\\\" (Real): mu-factor for the node in \
the lattice used to derive sum rules.\n\t- \\\"CG\\\" (Real): Clebsch-Gordan \
coefficient from symmetrization for systems without doublets. Equal to 1 for \
all amplitudes for a system with at least one doublet.\n\t- \\\"CKM\\\" \
(List): Contains weak interaction factors (Real) from the Hamiltonian. Only \
appears for physical systems.\n- \\\"n ASRs\\\" (List): Contains the number \
of amplitude sum rules (Real) at each order of breaking.\n- \\\"ASRs\\\" \
(List): Contains matrices of amplitude sum rule coefficients (Real) \
corresponding to each order of breaking.\n- \\\"n A2SRs\\\" (List): Contains \
the number of squared amplitude sum rules (Real) at each order of breaking.\n\
- \\\"A2SRs\\\" (List): Contains matrices of squared amplitude sum rule \
coefficients (Real) corresponding to each order of breaking.\n- \\\"n \
thetas\\\" (List): Contains the number of columns (Real) in the cross terms \
matrix at each order of breaking.\n- \\\"Theta ranks\\\" (List): Contains the \
rank of the cross terms matrix (Real) at each order of breaking.\>\""}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.9654306305147057`*^9, 3.965430687936945*^9}, {
   3.965431386784767*^9, 3.9654314041288376`*^9}, 3.965431494843601*^9, {
   3.965433459651066*^9, 3.9654336153908634`*^9}, {3.9654336612445736`*^9, 
   3.9654336640781*^9}, {3.9654368292857323`*^9, 3.9654368396580105`*^9}, {
   3.9654370542961617`*^9, 3.965437058074848*^9}, {3.965437143758339*^9, 
   3.965437146562784*^9}, {3.9654735558952885`*^9, 3.9654735607306004`*^9}, 
   3.965473608819456*^9, {3.965473653434969*^9, 3.965473666441969*^9}, {
   3.9654737191186695`*^9, 3.9654737457297726`*^9}, 3.96547387173028*^9, {
   3.965473974708271*^9, 3.96547401987434*^9}, {3.9654740726305447`*^9, 
   3.965474090206953*^9}, {3.9654741840132637`*^9, 3.9654742862256107`*^9}, {
   3.965474331773567*^9, 3.9654743744081936`*^9}, {3.9654744926430244`*^9, 
   3.9654749783951797`*^9}, {3.9654750155179806`*^9, 3.965475109192539*^9}, {
   3.9654751515308037`*^9, 3.965475188568512*^9}, {3.965475319154829*^9, 
   3.9654755854437656`*^9}, {3.9654756251011696`*^9, 
   3.9654756454827213`*^9}, {3.9654756901737614`*^9, 3.965475716046379*^9}, {
   3.96547585572822*^9, 3.9654759444997406`*^9}, {3.9654759783196945`*^9, 
   3.9654760030095177`*^9}, {3.965476046154745*^9, 3.965476046342926*^9}, {
   3.965476807708885*^9, 3.965476863496973*^9}, {3.9654798658294296`*^9, 
   3.965479887201605*^9}, {3.966277108433735*^9, 3.9662771728381863`*^9}, {
   3.9662774716504536`*^9, 3.9662774748942986`*^9}, {3.9662777060328465`*^9, 
   3.9662777099280834`*^9}, {3.966278145282234*^9, 3.9662782340474567`*^9}, {
   3.9662787396963673`*^9, 3.9662787567269897`*^9}, {3.966278922529766*^9, 
   3.966279161194292*^9}, {3.966279228589081*^9, 3.966279234317894*^9}, {
   3.966279285534815*^9, 3.9662793235169735`*^9}, {3.9662794184552937`*^9, 
   3.9662796195456524`*^9}, {3.966279654497282*^9, 3.966279708014412*^9}, {
   3.9662797396910973`*^9, 3.966279881337719*^9}, {3.966280081454815*^9, 
   3.966280168164156*^9}, 3.966280350095312*^9, {3.966280393296152*^9, 
   3.966280578000164*^9}, {3.9662806099045773`*^9, 3.966280615664484*^9}, {
   3.9662836697917843`*^9, 3.966283708503294*^9}, {3.9662837677166157`*^9, 
   3.966283769939001*^9}, {3.9662840511179333`*^9, 3.966284083971283*^9}, {
   3.966284707037195*^9, 3.9662847168562946`*^9}, {3.966284762945429*^9, 
   3.96628482249695*^9}, {3.966284872408373*^9, 3.9662848923749886`*^9}, {
   3.9662851597837543`*^9, 3.9662851680008507`*^9}, {3.9662852012134247`*^9, 
   3.966285202307993*^9}, {3.9662853794698925`*^9, 3.9662854673739223`*^9}, {
   3.966285532777197*^9, 3.9662855341198025`*^9}, {3.9663525633067436`*^9, 
   3.9663527254860153`*^9}, {3.966352757422737*^9, 3.9663528590276184`*^9}, {
   3.966352898604208*^9, 3.9663530290137596`*^9}, {3.9663530767139206`*^9, 
   3.9663530777101593`*^9}, {3.966353137373062*^9, 3.9663531787451687`*^9}, {
   3.9663532340886383`*^9, 3.966353674353443*^9}, {3.9663537355141296`*^9, 
   3.966353746789667*^9}, {3.96635384052956*^9, 3.966353890186102*^9}, {
   3.966353944453165*^9, 3.9663541081862698`*^9}, {3.9663541490410175`*^9, 
   3.966354215914301*^9}, {3.9663542558120995`*^9, 3.966354271694948*^9}, {
   3.966354407179323*^9, 3.9663546445026703`*^9}, {3.966374024448387*^9, 
   3.966374070079279*^9}, {3.9663766615650024`*^9, 3.9663766847964783`*^9}, {
   3.9663767195308743`*^9, 3.9663767577559834`*^9}, {3.966376804819599*^9, 
   3.96637680731571*^9}, {3.966376839525812*^9, 3.9663768620557156`*^9}, {
   3.9666930160471687`*^9, 3.9666930174073925`*^9}, {3.966693202666342*^9, 
   3.9666932048139343`*^9}, {3.9668052143011055`*^9, 
   3.9668052250198555`*^9}, {3.9668052622786865`*^9, 
   3.9668053374735813`*^9}, {3.966805378137249*^9, 3.9668054206073246`*^9}, {
   3.9668054545757504`*^9, 3.966805460431135*^9}, {3.966805620477873*^9, 
   3.966805813205002*^9}, {3.9668058492388477`*^9, 3.9668060602113132`*^9}, 
   3.966806158443159*^9, {3.966806259920067*^9, 3.966806383292507*^9}, {
   3.9668071451867466`*^9, 3.9668072097687683`*^9}, {3.96680724689608*^9, 
   3.966807309275898*^9}, {3.9668073428544426`*^9, 3.966807413776575*^9}, {
   3.9668074799578514`*^9, 3.9668074885345135`*^9}, {3.9668083015189857`*^9, 
   3.9668083710669365`*^9}, {3.9668084056114616`*^9, 3.966808452880913*^9}, {
   3.9668087794030533`*^9, 3.9668088181254997`*^9}, {3.9668088675404224`*^9, 
   3.9668088680407867`*^9}, {3.9668089196501484`*^9, 
   3.9668089343635273`*^9}, {3.96680900805818*^9, 3.966809054013817*^9}, {
   3.9668093146271305`*^9, 3.9668093159224777`*^9}, {3.9668111280159664`*^9, 
   3.966811170627531*^9}, {3.9668113680569153`*^9, 3.9668114199241047`*^9}, {
   3.966811456498125*^9, 3.966811523909313*^9}, {3.966811554200596*^9, 
   3.9668116546215096`*^9}, 3.966812036643444*^9, {3.9668121894900265`*^9, 
   3.9668121943285713`*^9}, {3.966813449079777*^9, 3.9668134922596893`*^9}, {
   3.96681352799308*^9, 3.9668135954989376`*^9}, 3.966813650460764*^9, 
   3.9668823962535534`*^9, {3.9668824363728294`*^9, 3.9668824537686405`*^9}, {
   3.9668825521812096`*^9, 3.966882570922573*^9}, {3.9668993930028744`*^9, 
   3.966899442128599*^9}, {3.966899480852619*^9, 3.9668994827675095`*^9}, {
   3.9668995749711*^9, 3.9668996534686184`*^9}, {3.966951885148674*^9, 
   3.9669519359453545`*^9}, {3.966952039758171*^9, 3.966952046974148*^9}, {
   3.9669520777910976`*^9, 3.966952182757551*^9}, {3.966952261716816*^9, 
   3.9669522634030285`*^9}, {3.9669577138317223`*^9, 3.966957747218666*^9}, {
   3.9676492333448086`*^9, 3.9676492344979305`*^9}, {3.967649359473692*^9, 
   3.9676494293187447`*^9}, 3.9676497405286846`*^9, {3.9676498804469624`*^9, 
   3.9676498935651054`*^9}, {3.9676502273237076`*^9, 
   3.9676502333720646`*^9}, {3.967650307322386*^9, 3.967650337213373*^9}, {
   3.967757947903244*^9, 3.9677579497218056`*^9}, {3.9677579965243816`*^9, 
   3.967758018622774*^9}, {3.9677580509970703`*^9, 3.9677580807062073`*^9}, {
   3.967758110916733*^9, 3.9677581265480175`*^9}, {3.9680844574351597`*^9, 
   3.9680844579441566`*^9}, {3.9681606863127728`*^9, 
   3.9681606889128666`*^9}, {3.968160825296419*^9, 3.9681608465967064`*^9}, {
   3.9681611639559174`*^9, 3.9681612210721264`*^9}, {3.9681612953986206`*^9, 
   3.9681612961809864`*^9}, {3.968161343749296*^9, 3.9681613532259636`*^9}, {
   3.9681616699348392`*^9, 3.96816169811998*^9}, {3.9681617582390366`*^9, 
   3.9681618023513927`*^9}, {3.9681618485404816`*^9, 3.9681618499367485`*^9}, 
   3.968161933643999*^9, {3.968161964817747*^9, 3.968161976247961*^9}, {
   3.968162027043028*^9, 3.9681620752077904`*^9}, {3.9681622155082226`*^9, 
   3.9681622416148834`*^9}, {3.968162302125622*^9, 3.9681623029535465`*^9}, {
   3.9681623379017735`*^9, 3.968162341730505*^9}, {3.9681624191822376`*^9, 
   3.968162421907799*^9}, {3.9681624538600407`*^9, 3.968162454472147*^9}, {
   3.968162485797886*^9, 3.968162518487364*^9}, 3.9681625499991646`*^9, {
   3.9681626177457314`*^9, 3.9681626846884155`*^9}, {3.9681627586018505`*^9, 
   3.968162814778591*^9}, {3.968162930206421*^9, 3.9681630270457306`*^9}, {
   3.968163058557213*^9, 3.9681631259347*^9}, {3.968163167148899*^9, 
   3.968163258334337*^9}, {3.9681633087835636`*^9, 3.968163348573292*^9}, {
   3.968163432323889*^9, 3.9681634845481567`*^9}, {3.9681635326701508`*^9, 
   3.968163538264988*^9}, {3.968163571650423*^9, 3.9681635725150356`*^9}, {
   3.968163612068409*^9, 3.9681636507768555`*^9}, {3.9681636854248085`*^9, 
   3.9681638512902317`*^9}, {3.9681638857007847`*^9, 
   3.9681640767877216`*^9}, {3.9681641273904552`*^9, 
   3.9681643071998653`*^9}, {3.968164406185095*^9, 3.9681644624702053`*^9}, {
   3.9681645225446568`*^9, 3.9681650046363945`*^9}, {3.9681650812317142`*^9, 
   3.9681650925839386`*^9}, {3.968165144880007*^9, 3.968165267806528*^9}, {
   3.968165299523384*^9, 3.968165364828102*^9}, {3.968165449996374*^9, 
   3.9681655419949017`*^9}, 3.9681655813085537`*^9, {3.9681656700641727`*^9, 
   3.9681657647988663`*^9}, {3.9681658443182774`*^9, 
   3.9681658768207664`*^9}, {3.968165907393553*^9, 3.9681659233596287`*^9}, {
   3.9681659821739006`*^9, 3.968166001978256*^9}, {3.968166046501995*^9, 
   3.968166052435541*^9}, {3.968166087145933*^9, 3.9681660878494015`*^9}, {
   3.9681661301491623`*^9, 3.968166141202549*^9}, {3.9681662341428127`*^9, 
   3.9681662893311024`*^9}, {3.9681663847500763`*^9, 
   3.9681663869501305`*^9}, {3.9681664397234344`*^9, 3.968166549413332*^9}, {
   3.968173999399006*^9, 3.9681740007899017`*^9}, {3.9683571598481674`*^9, 
   3.9683571674576855`*^9}, {3.968357206041256*^9, 3.9683572660970554`*^9}, 
   3.9683572963615704`*^9, {3.9683573565645676`*^9, 3.9683574507432117`*^9}, {
   3.9683574936740665`*^9, 3.968357524276802*^9}, {3.9704098859702454`*^9, 
   3.970409904715372*^9}, {3.9704101956871414`*^9, 3.9704102061278496`*^9}, {
   3.970410889251068*^9, 3.9704109033626976`*^9}, {3.9704113089235954`*^9, 
   3.970411337095976*^9}, {3.970411390231745*^9, 3.9704113934096317`*^9}, {
   3.9704115709290104`*^9, 3.9704116261115856`*^9}, {3.9704116612020073`*^9, 
   3.9704117496880016`*^9}, {3.970411859858761*^9, 3.970411867507927*^9}, {
   3.970411965627947*^9, 3.97041198458189*^9}, {3.9704120508159637`*^9, 
   3.970412056043974*^9}, {3.9704122939617214`*^9, 3.9704122980600986`*^9}, {
   3.9704123599628887`*^9, 3.970412382906725*^9}, {3.9704124165323067`*^9, 
   3.9704124910001144`*^9}, {3.9704125885728264`*^9, 
   3.9704126055414696`*^9}, {3.9704130100538464`*^9, 
   3.9704130121094913`*^9}, {3.970413551874939*^9, 3.970413599092407*^9}, {
   3.970413853744236*^9, 3.9704140502162914`*^9}, {3.970414100128662*^9, 
   3.970414166343626*^9}, {3.9704142254336357`*^9, 3.970414360466135*^9}, {
   3.970416580780365*^9, 3.9704166477333946`*^9}, {3.9707622003596096`*^9, 
   3.970762242191622*^9}, 3.9707630281739597`*^9, {3.9707630593364334`*^9, 
   3.9707631848673077`*^9}, {3.970763232440153*^9, 3.970763266697567*^9}, 
   3.9707633826453266`*^9, {3.9707693932902527`*^9, 3.9707693960181065`*^9}, {
   3.9707694288303566`*^9, 3.970769782684841*^9}, {3.9707698200247955`*^9, 
   3.9707699040678787`*^9}, {3.970771867948784*^9, 3.97077190794203*^9}, {
   3.970772203966564*^9, 3.970772247524147*^9}, {3.9707726229844418`*^9, 
   3.9707726242686462`*^9}, {3.9707726712465096`*^9, 
   3.9707726935053616`*^9}},ExpressionUUID->"bfe98629-a847-9e41-92fe-\
50acce952acb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a", "=."}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", "=."}], ";"}]}], "Code",
 CellChangeTimes->{{3.9668137855829144`*^9, 
  3.966813786148487*^9}},ExpressionUUID->"468dc405-e98f-d944-9530-\
65b2f072ecc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.965430802027622*^9, 3.965430802027622*^9}, 
   3.965431486173973*^9, {3.9668137920153046`*^9, 
   3.9668137921150627`*^9}},ExpressionUUID->"df1742f8-e3ff-e24a-bbb8-\
d2eca0a18691"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ASRsHelp", "[", "function_Symbol", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"usage", ",", " ", "details"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"usage", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"MessageName", "[", 
         RowBox[{"function", ",", "\"\<usage\>\""}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"details", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"MessageName", "[", 
         RowBox[{"function", ",", "\"\<details\>\""}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringQ", "[", "usage", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Print", "[", "usage", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringQ", "[", "details", "]"}], ",", 
            RowBox[{"Print", "[", "details", "]"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          
          RowBox[{"\"\<No documentation found for \>\"", ",", "function", 
           ",", "\"\<.\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.9662841789232903`*^9, 3.9662842713772697`*^9}, {
   3.96628434337908*^9, 3.966284367443407*^9}, 3.9662844652050858`*^9, {
   3.9662846166666374`*^9, 3.966284650823759*^9}, {3.9662847277430096`*^9, 
   3.966284750118519*^9}, 3.9662849167883453`*^9, {3.966357330939247*^9, 
   3.966357336527643*^9}, {3.966813794295582*^9, 3.9668137943437004`*^9}, {
   3.9704160624974384`*^9, 
   3.970416085413307*^9}},ExpressionUUID->"05555e7c-a6c2-684b-aab7-\
5668dfef0f53"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$ASRsSession", "=."}], ";"}]], "Code",
 CellChangeTimes->{{3.9654273749730663`*^9, 3.965427399699991*^9}, {
   3.965427501287636*^9, 3.965427540883009*^9}, {3.965427573385994*^9, 
   3.965427574649*^9}, {3.965427817152191*^9, 3.965427825094694*^9}, {
   3.9654278806568317`*^9, 3.9654278913700447`*^9}, {3.965428057781994*^9, 
   3.9654280857157*^9}, {3.9654284415013943`*^9, 3.965428556773428*^9}, 
   3.9654287477571545`*^9, {3.9654287995370655`*^9, 3.9654288619335823`*^9}, {
   3.96542892506958*^9, 3.9654289255047417`*^9}, {3.965428958765398*^9, 
   3.965429049927452*^9}, {3.9654291596539288`*^9, 3.9654291896438313`*^9}, {
   3.9654293301555634`*^9, 3.9654295079148254`*^9}, {3.965429583507183*^9, 
   3.965429652161791*^9}, {3.9654297712931576`*^9, 3.965429793189089*^9}, {
   3.9654308686714325`*^9, 3.9654308945931664`*^9}, {3.9654311319645786`*^9, 
   3.96543114227055*^9}, {3.9654312427640457`*^9, 3.96543124351474*^9}, {
   3.965431348945015*^9, 3.9654313493049774`*^9}, {3.9654315170366154`*^9, 
   3.9654315175488605`*^9}, {3.965433336695759*^9, 3.9654333724917946`*^9}, {
   3.966813796517563*^9, 
   3.966813796578251*^9}},ExpressionUUID->"aa64c93c-fc27-6843-b787-\
24caf5262f31"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"startPythonSession", "[", 
     RowBox[{"session_", ",", "path_String"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"$ASRsSession", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"session", ",", "_ExternalSessionObject"}], "]"}], ",", 
          "session", ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"startPythonSession", "::", "nosession"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"FileExistsQ", "[", "path", "]"}], ",", "Null", ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"startPythonSession", "::", "nofile"}], ",", "path"}], 
           "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ExternalEvaluate", "[", 
        RowBox[{"$ASRsSession", ",", 
         RowBox[{"File", "[", "path", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"startPythonSession", "::", "nosession"}], 
   "=", "\"\<No active Python session provided.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"startPythonSession", "::", "nofile"}], 
   "=", "\"\<File `1` does not exist.\>\""}], ";"}]}], "Code",
 CellChangeTimes->{
  3.965437435569935*^9, {3.966372637834591*^9, 3.96637265759219*^9}, 
   3.966372997945526*^9, {3.9666930632372456`*^9, 3.9666930670614605`*^9}, {
   3.966812045892618*^9, 3.9668120476657276`*^9}, {3.966813798563038*^9, 
   3.966813798624035*^9}},ExpressionUUID->"3b920bb5-cb45-0245-be13-\
ce3c447d075c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pyEval", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"args_", ":", 
      RowBox[{"<|", "|>"}]}]}], "]"}], ":=", 
   RowBox[{"ExternalEvaluate", "[", 
    RowBox[{"$ASRsSession", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Command\>\"", "->", "expr"}], ",", 
       RowBox[{"\"\<Arguments\>\"", "->", "args"}]}], "|>"}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.966813800668848*^9, 
  3.966813800731428*^9}},ExpressionUUID->"07bc084b-f324-2545-8e8d-\
5c83b127bf74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Extracts", " ", "amplitudes", " ", "from", " ", "system", " ", 
    RowBox[{"(", 
     RowBox[{"a", " ", "Python", " ", "System", " ", "object"}], ")"}]}], " ",
    "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "extractAmps", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"partVal", "->", 
       RowBox[{"{", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"extractAmps", "[", 
      RowBox[{"system_", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"amplitudes", ",", "colNames", ",", "extractParticles", ",", 
         RowBox[{"partVal", "=", 
          RowBox[{"OptionValue", "[", "partVal", "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"amplitudes", "=", 
         RowBox[{"pyEval", "[", 
          RowBox[{"\"\<System.extract_amps\>\"", ",", "system"}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"colNames", "=", 
         RowBox[{"{", 
          
          RowBox[{"\"\<Processes\>\"", ",", "\"\<QNs\>\"", 
           ",", "\"\<n-tuple\>\"", ",", "\"\<Node\>\"", 
           ",", "\"\<Binary indices\>\"", ",", "\"\<q factor\>\"", 
           ",", "\"\<mu\>\"", ",", "\"\<CG\>\""}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"amplitudes", "=", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{"AssociationThread", "[", 
             RowBox[{"colNames", ",", "#"}], "]"}], "&"}], "]"}], "@", 
          "amplitudes"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Processes", " ", "from", " ", "particle", " ", "names"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"extractParticles", "[", 
          RowBox[{"particles_", ",", "indices_"}], "]"}], ":=", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"MapThread", "[", 
             RowBox[{"Part", ",", 
              RowBox[{"{", 
               RowBox[{"#1", ",", "#2"}], "}"}]}], "]"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"particles", ",", "indices"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "partVal", "]"}], ">", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"amplitudes", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "\"\<Processes\>\""}], "]"}], "]"}], "=", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"extractParticles", "[", 
                   RowBox[{"partVal", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                  RowBox[{"extractParticles", "[", 
                   RowBox[{"partVal", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], ",", 
               RowBox[{"amplitudes", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "\"\<Processes\>\""}], "]"}], "]"}]}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"amplitudes", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "\"\<CKM\>\""}], "]"}], "]"}], "=", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
               RowBox[{"amplitudes", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "\"\<Processes\>\""}], "]"}], "]"}], ",", 
               RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"amplitudes", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "\"\<Processes\>\""}], "]"}], "]"}], "=", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}], ",", 
               RowBox[{"amplitudes", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "\"\<Processes\>\""}], "]"}], "]"}], ",", 
               RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"amplitudes", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "\"\<Processes\>\""}], "]"}], "]"}], "=", 
             RowBox[{"Map", "[", 
              RowBox[{"StringRiffle", ",", 
               RowBox[{"amplitudes", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "\"\<Processes\>\""}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"-", "2"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"amplitudes", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "\"\<Processes\>\""}], "]"}], "]"}], "=", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"StringJoin", "[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\< \[Rule] \>\"", 
                   ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "}"}], "&"}], ",", 
               RowBox[{"amplitudes", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "\"\<Processes\>\""}], "]"}], "]"}], ",", 
               RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"amplitudes", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "\"\<Processes\>\""}], "]"}], "]"}], "=", 
             RowBox[{"Flatten", "/@", 
              RowBox[{"amplitudes", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "\"\<Processes\>\""}], "]"}], "]"}]}]}], 
            ";"}], "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"amplitudes", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"KeyDrop", "[", 
               RowBox[{"#", ",", "\"\<Processes\>\""}], "]"}], "&"}], "/@", 
             "amplitudes"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"amplitudes", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<QNs\>\""}], "]"}], "]"}], "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"#", ">", "0"}], ",", 
              RowBox[{"\"\<+\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{
                 RowBox[{"Rationalize", "[", "#", "]"}], ",", 
                 "StandardForm"}], "]"}]}], ",", 
              RowBox[{"ToString", "[", 
               RowBox[{
                RowBox[{"Rationalize", "[", "#", "]"}], ",", "StandardForm"}],
                "]"}]}], "]"}], "&"}], ",", 
           RowBox[{"amplitudes", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "\"\<QNs\>\""}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"amplitudes", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<QNs\>\""}], "]"}], "]"}], "=", 
         RowBox[{"Map", "[", 
          RowBox[{"StringRiffle", ",", 
           RowBox[{"amplitudes", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "\"\<QNs\>\""}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"-", "2"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"amplitudes", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<QNs\>\""}], "]"}], "]"}], "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"StringJoin", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ToString", "[", 
                RowBox[{
                 RowBox[{"Overscript", "[", 
                  RowBox[{"\"\< \[Rule] \>\"", ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                 "StandardForm"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "}"}], "&"}], ",", 
           RowBox[{"amplitudes", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "\"\<QNs\>\""}], "]"}], "]"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"amplitudes", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<QNs\>\""}], "]"}], "]"}], "=", 
         RowBox[{"Flatten", "/@", 
          RowBox[{"amplitudes", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "\"\<QNs\>\""}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"amplitudes", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<mu\>\""}], "]"}], "]"}], "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "*", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
           RowBox[{"amplitudes", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "\"\<mu\>\""}], "]"}], "]"}]}], "]"}]}], ";",
         " ", 
        RowBox[{"(*", " ", 
         RowBox[{"mu", " ", "factors"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"amplitudes", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<CG\>\""}], "]"}], "]"}], "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ClebschGordan", "@@", 
             RowBox[{"Rationalize", "[", "#", "]"}]}], "&"}], ",", 
           RowBox[{"amplitudes", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "\"\<CG\>\""}], "]"}], "]"}]}], "]"}]}], ";",
         " ", 
        RowBox[{"(*", " ", 
         RowBox[{"CG", " ", "coeffs", " ", "from", " ", "symmetrization"}], 
         " ", "*)"}], "\[IndentingNewLine]", "amplitudes"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.966371965137396*^9, 3.9663719781971264`*^9}, {
   3.9663721202065563`*^9, 3.9663721251565247`*^9}, {3.9663721589966183`*^9, 
   3.9663721630163383`*^9}, {3.9663722029261837`*^9, 3.9663722074563885`*^9}, 
   3.966372378005415*^9, {3.966519330398857*^9, 3.966519463141737*^9}, {
   3.96669310964682*^9, 3.9666931128382034`*^9}, {3.96680505756176*^9, 
   3.966805075277052*^9}, {3.9668067601022663`*^9, 3.9668067769436855`*^9}, {
   3.966813803294628*^9, 3.9668138033317585`*^9}, {3.96688894287138*^9, 
   3.966888946145876*^9}, {3.9668889777635117`*^9, 3.9668889900924377`*^9}, {
   3.966889192245558*^9, 3.966889201619543*^9}, {3.966889571184273*^9, 
   3.9668895806036167`*^9}, 3.966889687013008*^9, {3.9668897775553017`*^9, 
   3.9668897817883396`*^9}, {3.966891848257225*^9, 3.966891857874201*^9}, {
   3.966892080599289*^9, 3.966892081763773*^9}, 3.9668929955675373`*^9, {
   3.966893101038851*^9, 3.966893132897608*^9}, {3.966893515754141*^9, 
   3.9668935210247536`*^9}, {3.9668955016056004`*^9, 3.966895503217785*^9}, {
   3.9668972842295322`*^9, 3.966897295692314*^9}, {3.9668973349985943`*^9, 
   3.966897355981825*^9}, {3.9668976135051994`*^9, 3.9668976167762585`*^9}, {
   3.966897679838812*^9, 3.9668976802434025`*^9}, {3.966897729293379*^9, 
   3.966897732471733*^9}, {3.966897832149828*^9, 3.966897842027008*^9}, {
   3.966898290793867*^9, 3.966898321219927*^9}, {3.966898542164654*^9, 
   3.9668985513901253`*^9}, {3.966898693117687*^9, 3.9668986946001225`*^9}, {
   3.9669744823656197`*^9, 3.9669744830626087`*^9}, 3.9669747796229553`*^9, 
   3.967933774898567*^9, {3.967933815708025*^9, 3.967933823580473*^9}, {
   3.967934044672655*^9, 3.96793406168589*^9}, {3.9679340931125107`*^9, 
   3.9679340934442043`*^9}, {3.9679343846200905`*^9, 3.9679344177484474`*^9}, 
   3.9679348135268707`*^9, {3.9679352638173676`*^9, 3.9679352656251945`*^9}, {
   3.967935323485405*^9, 3.967935323678591*^9}, {3.9679353569053*^9, 
   3.967935378281639*^9}, {3.9679355384554653`*^9, 3.967935540089134*^9}, {
   3.967935625894083*^9, 3.9679356504013577`*^9}, 3.96793572515662*^9, {
   3.9679358238403893`*^9, 3.9679358305267334`*^9}, {3.967935970010231*^9, 
   3.9679359710224648`*^9}, {3.9679360016446342`*^9, 3.967936009165066*^9}, {
   3.9679362188831177`*^9, 3.96793624703714*^9}, {3.9679365750404987`*^9, 
   3.9679365813305607`*^9}, {3.9679368757815323`*^9, 3.967936892052561*^9}, {
   3.9679369277319164`*^9, 3.9679369352249546`*^9}, {3.967937293035408*^9, 
   3.9679373215209007`*^9}, {3.9679374756224937`*^9, 3.967937484680094*^9}, {
   3.969824363740185*^9, 3.9698243651743965`*^9}, {3.9703514610205574`*^9, 
   3.9703514977684174`*^9}, 3.9704109237992897`*^9, {3.9704167381803207`*^9, 
   3.970416739626711*^9}, 3.97042311360894*^9, {3.970423151808346*^9, 
   3.970423155641327*^9}},ExpressionUUID->"5984c2c7-d660-8343-97c4-\
7ee157add873"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"defineSystem", "[", 
    RowBox[{"in_", ",", "h_", ",", "out_", ",", "phys_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"repSpins", ",", "reps", ",", "system", ",", "particles"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"repSpins", "[", "list_", "]"}], ":=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"list", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "-", "1"}], ")"}], "/", 
          "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"phys", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"particles", "=", 
           RowBox[{"{", 
            RowBox[{"in", ",", "h", ",", "out"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"reps", "=", 
           RowBox[{"Map", "[", 
            RowBox[{"repSpins", ",", "particles"}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"reps", "=", 
           RowBox[{"{", 
            RowBox[{"in", ",", "h", ",", "out"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"particles", "=", 
           RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"system", "=", 
       RowBox[{"pyEval", "[", 
        RowBox[{"\"\<define_system\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"reps", ",", "phys"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"system", ",", "particles"}], "}"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.9654334098345833`*^9, 3.965433410346695*^9}, {
   3.965473909608509*^9, 3.9654739365379543`*^9}, {3.9654761644054356`*^9, 
   3.9654761748442993`*^9}, {3.965476211991638*^9, 3.9654762727694874`*^9}, 
   3.9654763103803864`*^9, {3.965476355814966*^9, 3.9654765311662216`*^9}, 
   3.965476575916849*^9, {3.965476626005413*^9, 3.9654766811265945`*^9}, {
   3.965476757497919*^9, 3.965476788881382*^9}, {3.965479288624241*^9, 
   3.9654792988438816`*^9}, {3.966370746573862*^9, 3.966370752425617*^9}, {
   3.9663708134007664`*^9, 3.9663708292465687`*^9}, {3.9663708744977283`*^9, 
   3.9663708776450386`*^9}, 3.966370944229084*^9, {3.9663709827525196`*^9, 
   3.9663709984236183`*^9}, {3.966371028650572*^9, 3.966371040488106*^9}, {
   3.96681380556225*^9, 3.966813805614294*^9}, {3.9704159586046524`*^9, 
   3.970415990261162*^9}, {3.970416021865553*^9, 
   3.9704160230693703`*^9}},ExpressionUUID->"880939d3-8af6-344f-8730-\
7a3378b3ba8f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "generateASRs", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"phys", "->", "False"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateASRs", "[", 
    RowBox[{"in_", ",", "h_", ",", "out_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"system", ",", 
       RowBox[{"phys", "=", 
        RowBox[{"OptionValue", "[", "phys", "]"}]}], ",", "particles", ",", 
       "aux", ",", "ASRs", ",", "amplitudes", ",", "dupPairs", ",", 
       "factorsMat", ",", "simplifyFactors", ",", "irreps", ",", "n", ",", 
       "p", ",", "nAmps", ",", "nASRs"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"system", ",", "particles"}], "}"}], "=", 
       RowBox[{"defineSystem", "[", 
        RowBox[{"in", ",", "h", ",", "out", ",", "phys"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"constructs", " ", "Python", " ", "System", " ", "object"}], 
       " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"aux", "=", 
       RowBox[{
        RowBox[{"pyEval", "[", 
         RowBox[{"\"\<System.extract_sys\>\"", ",", "system"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"system", ",", "ASRs", ",", "dupPairs"}], "}"}], "=", 
       RowBox[{"pyEval", "[", 
        RowBox[{"\"\<generate_srs\>\"", ",", "system"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "M", " ", "values", " ", "for", " ", "symmetrized", " ", "system"}], ",",
         " ", 
        RowBox[{"contains", " ", "duplicate", " ", "amplitudes"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"amplitudes", "=", 
       RowBox[{"extractAmps", "[", "system", "]"}]}], ";", "\n", 
      "\[IndentingNewLine]", 
      RowBox[{"factorsMat", "=", 
       RowBox[{"DiagonalMatrix", "[", 
        RowBox[{
         RowBox[{"amplitudes", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<q factor\>\""}], "]"}], "]"}], "*", 
         RowBox[{"amplitudes", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<mu\>\""}], "]"}], "]"}], "*", 
         RowBox[{"amplitudes", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<CG\>\""}], "]"}], "]"}]}], "]"}]}], ";", 
      " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "ASR", " ", "matrices", " ", "include", " ", "q", " ", "factors"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ASRs", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ".", "factorsMat"}], "&"}], ",", "ASRs"}], "]"}]}], ";",
       " ", 
      RowBox[{"(*", " ", 
       RowBox[{"SRs", " ", "for", " ", "symmetrized", " ", "system"}], " ", 
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Correct", " ", "for", " ", "duplicate", " ", "amplitudes", " ", 
        "from", " ", "symmetrization"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ASRs", "[", 
           RowBox[{"[", "b", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"dupPairs", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], "+=", 
         RowBox[{
          RowBox[{"ASRs", "[", 
           RowBox[{"[", "b", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"dupPairs", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", 
          RowBox[{"Length", "[", "ASRs", "]"}]}], "}"}]}], "]"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "adds", " ", "together", " ", "cols", " ", "of", " ", "duplicate", " ",
         "amp", " ", "pairs"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ASRs", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Delete", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "#", "]"}], ",", 
            RowBox[{"List", "/@", 
             RowBox[{"dupPairs", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "]"}], "]"}], 
         "&"}], "/@", "ASRs"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"deletes", " ", "duplicate", " ", "cols"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"system", "=", 
       RowBox[{"pyEval", "[", 
        RowBox[{"\"\<System.remove_dups\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"system", ",", "dupPairs"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"amplitudes", "=", 
       RowBox[{"extractAmps", "[", 
        RowBox[{"system", ",", 
         RowBox[{"partVal", "->", "particles"}]}], "]"}]}], ";", "\n", 
      "\[IndentingNewLine]", 
      RowBox[{"amplitudes", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"KeyDrop", "[", 
          RowBox[{"#", ",", "\"\<q factor\>\""}], "]"}], "&"}], "/@", 
        "amplitudes"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simplifyFactors", "[", "mat_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "/", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"Apply", "[", 
             RowBox[{"GCD", ",", 
              RowBox[{
               RowBox[{"DeleteCases", "[", 
                RowBox[{"#", ",", "0"}], "]"}], "^", "2"}]}], "]"}], "]"}]}], 
          ")"}], "&"}], "/@", "mat"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ASRs", "=", 
       RowBox[{"If", "[", 
        RowBox[{"aux", ",", 
         RowBox[{"Map", "[", 
          RowBox[{"RowReduce", ",", "ASRs"}], "]"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{"simplifyFactors", ",", "ASRs"}], "]"}]}], "]"}]}], ";", 
      " ", 
      RowBox[{"(*", " ", 
       RowBox[{"simplifies", " ", 
        RowBox[{"factors", "/", "row"}], " ", "reduces", " ", 
        RowBox[{"(", 
         RowBox[{
         "for", " ", "systems", " ", "requiring", " ", "symmetrization"}], 
         ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ASRs", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{"Except", "@", 
           RowBox[{"{", 
            RowBox[{"0", ".."}], "}"}]}], "]"}], ",", "ASRs"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"irreps", ",", "n", ",", "p"}], "}"}], "=", 
       RowBox[{
        RowBox[{"pyEval", "[", 
         RowBox[{"\"\<System.extract_sys\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"system", ",", "True"}], "}"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"system", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Amplitudes\>\"", "->", "amplitudes"}], ",", 
         RowBox[{"\"\<ASRs\>\"", "->", "ASRs"}]}], "|>"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"from", " ", "here", " ", "on"}], ",", " ", 
        RowBox[{"system", " ", "is", " ", "an", " ", "association"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"nAmps", "=", 
       RowBox[{"numAmps", "[", "system", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nASRs", "=", 
       RowBox[{"numSRs", "[", "system", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"system", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Irreps\>\"", "->", "irreps"}], ",", 
         RowBox[{"\"\<n doublets\>\"", "->", "n"}], ",", 
         RowBox[{"\"\<p factor\>\"", "->", "p"}], ",", 
         RowBox[{"\"\<n amps\>\"", "->", "nAmps"}], ",", 
         RowBox[{"\"\<Amplitudes\>\"", "->", "amplitudes"}], ",", 
         RowBox[{"\"\<n ASRs\>\"", "->", "nASRs"}], ",", 
         RowBox[{"\"\<ASRs\>\"", "->", "ASRs"}]}], "|>"}]}], ";", "\n", 
      "\[IndentingNewLine]", "system"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.96547339632358*^9, 3.965473424966324*^9}, 
   3.965473678537565*^9, {3.9663704810984497`*^9, 3.9663705740647907`*^9}, {
   3.9663706340511837`*^9, 3.966370655744219*^9}, {3.9663707239872284`*^9, 
   3.9663707560279446`*^9}, {3.9663710994210873`*^9, 3.966371192964012*^9}, {
   3.96637123630064*^9, 3.9663712457140636`*^9}, {3.9663712778640347`*^9, 
   3.96637127855542*^9}, {3.9663713360718555`*^9, 3.9663713463890114`*^9}, {
   3.9663721124367485`*^9, 3.966372113732992*^9}, {3.9663721968963375`*^9, 
   3.966372197363901*^9}, 3.9663739876695786`*^9, {3.966375294862892*^9, 
   3.9663753263727226`*^9}, {3.966375369982132*^9, 3.966375390622326*^9}, {
   3.9663754752416916`*^9, 3.9663755260716343`*^9}, {3.966376166493292*^9, 
   3.966376176514143*^9}, {3.966813808118252*^9, 3.966813808158779*^9}, {
   3.966892451289791*^9, 3.9668924624586487`*^9}, {3.9668927060052357`*^9, 
   3.9668927070370502`*^9}, {3.966974491341345*^9, 3.966974499108799*^9}, {
   3.9696565937770596`*^9, 3.969656608332382*^9}, {3.9698236248689785`*^9, 
   3.9698236318811493`*^9}, {3.9698237751570797`*^9, 3.969823791915119*^9}, {
   3.969823963080391*^9, 3.9698239675466576`*^9}, {3.969824124026436*^9, 
   3.9698241874309177`*^9}, {3.969824227009157*^9, 3.9698242482928696`*^9}, {
   3.9698243961070366`*^9, 3.9698244257476425`*^9}, {3.969824459079674*^9, 
   3.9698244614640884`*^9}, {3.969824644076483*^9, 3.9698246658296375`*^9}, {
   3.969824726019333*^9, 3.969824730125698*^9}, {3.969825712686264*^9, 
   3.969825720511711*^9}, {3.9703452093274155`*^9, 3.970345224518547*^9}, {
   3.970351507375984*^9, 3.9703515730347614`*^9}, {3.9703516081398544`*^9, 
   3.9703516362579994`*^9}, {3.970351676144594*^9, 3.9703516836455193`*^9}, {
   3.970351742474411*^9, 3.9703517664929523`*^9}, {3.970351901502201*^9, 
   3.970351974800564*^9}, {3.9703565573273544`*^9, 3.9703565993222694`*^9}, {
   3.970356664673897*^9, 3.970356709358452*^9}, {3.970366683458065*^9, 
   3.9703667194863358`*^9}, {3.9704097825437756`*^9, 
   3.9704098137659245`*^9}, {3.9704099982393665`*^9, 3.970409999173952*^9}, {
   3.970410244233053*^9, 3.970410244785551*^9}, {3.9704109465168133`*^9, 
   3.970410973897852*^9}, {3.9704110987048874`*^9, 3.9704110991898575`*^9}, {
   3.970413115117712*^9, 3.9704131265620766`*^9}, {3.9704131625789585`*^9, 
   3.970413166498911*^9}, 3.970413224674944*^9, {3.970413275105423*^9, 
   3.970413289215143*^9}, {3.970415214645443*^9, 3.970415215355932*^9}, {
   3.970415287953615*^9, 3.9704152978434963`*^9}, {3.970415328051649*^9, 
   3.970415335499262*^9}, {3.970415369428694*^9, 3.97041536990641*^9}, {
   3.970415416735071*^9, 3.9704154450093975`*^9}, {3.970415871904209*^9, 
   3.970415939203207*^9}, {3.970422921438978*^9, 3.970422937223507*^9}, {
   3.970422972837862*^9, 3.970422975246998*^9}, {3.9704240196081905`*^9, 
   3.970424060335844*^9}, {3.9704241036317673`*^9, 3.970424128691431*^9}, {
   3.9704243338302727`*^9, 3.9704244610766087`*^9}, {3.9704245535740356`*^9, 
   3.9704245768288136`*^9}, 3.970424620312071*^9, {3.970424961853489*^9, 
   3.9704250163259525`*^9}, {3.970425048789957*^9, 3.9704252026042004`*^9}, {
   3.9704252549382267`*^9, 3.970425256757286*^9}, 
   3.9706788363520947`*^9},ExpressionUUID->"b8f38615-5711-ca47-ad73-\
f311a43e531b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Returns", " ", "the", " ", "total", " ", "number", " ", "of", " ", 
    "amplitudes", " ", "in", " ", "the", " ", "system"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"numAmps", "[", 
     RowBox[{"system_", ",", 
      RowBox[{"nPairs_", ":", "False"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"amplitudes", "=", 
        RowBox[{"system", "[", 
         RowBox[{"[", "\"\<Amplitudes\>\"", "]"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "nPairs"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Length", "@", 
         RowBox[{"DeleteDuplicates", "@", 
          RowBox[{"Flatten", "@", 
           RowBox[{"amplitudes", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "\"\<Binary indices\>\""}], "]"}], 
            "]"}]}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Length", "@", 
         RowBox[{"Flatten", "@", 
          RowBox[{"amplitudes", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "\"\<Node\>\""}], "]"}], "]"}]}]}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{{3.966376669886526*^9, 3.966376674456522*^9}, {
   3.966813811354227*^9, 3.966813811426607*^9}, {3.966901789977337*^9, 
   3.966901888001793*^9}, {3.9669019631733913`*^9, 3.9669019693521004`*^9}, {
   3.9669020000011883`*^9, 3.966902030094076*^9}, {3.9669028160293427`*^9, 
   3.966902818963228*^9}, 3.9669031137220573`*^9, {3.966952966384054*^9, 
   3.9669529692871323`*^9}, {3.966955642612261*^9, 3.9669556467663593`*^9}, {
   3.970411024001194*^9, 3.9704110870839233`*^9}, {3.9704158496490383`*^9, 
   3.9704158597439213`*^9}, 3.9704167988352795`*^9, 
   3.9705922972504654`*^9},ExpressionUUID->"e76c6bd5-7ca7-904b-9202-\
4c539d870962"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Adds", " ", "a", " ", "column", " ", "to", " ", "amplitudes"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"labelAmps", ",", "HoldFirst"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "labelAmps", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"labeling", "->", "\"\<Amplitudes\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"labelAmps", "[", 
      RowBox[{"system_", ",", "colName_String", ",", "labels_List", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sysVal", "=", 
          RowBox[{"Evaluate", "[", "system", "]"}]}], ",", "amplitudes", ",", 
         "pairs", ",", "nAmps", ",", "labelVals", ",", 
         RowBox[{"labeling", "=", 
          RowBox[{"OptionValue", "[", "labeling", "]"}]}], ",", "indices", ",",
          "labelIndices"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"amplitudes", "=", 
         RowBox[{"sysVal", "[", 
          RowBox[{"[", "\"\<Amplitudes\>\"", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"pairs", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"labeling", "==", "\"\<Amplitudes\>\""}], ",", "False", ",",
            "True"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nAmps", "=", 
         RowBox[{"numAmps", "[", 
          RowBox[{"sysVal", ",", "pairs"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"nAmps", "==", 
           RowBox[{"Length", "@", 
            RowBox[{"Flatten", "[", "labels", "]"}]}]}], ",", "Null", ",", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"labelAmps", "::", "arglen"}], ",", "labels", ",", 
             "nAmps", ",", 
             RowBox[{"Length", "@", 
              RowBox[{"Flatten", "[", "labels", "]"}]}]}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"labelVals", "=", 
         RowBox[{"Which", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"labeling", "==", "\"\<Amplitude pairs\>\""}], ",", 
           "\[IndentingNewLine]", "labels", ",", "\[IndentingNewLine]", 
           RowBox[{"labeling", "==", "\"\<Amplitudes\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"indices", "=", 
              RowBox[{"amplitudes", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "\"\<Binary indices\>\""}], "]"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"labelIndices", "=", 
              RowBox[{"Sort", "[", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"Range", "[", "nAmps", "]"}], ",", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"indices", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], "==", 
                    RowBox[{"indices", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"2", "*", "i"}], "-", "1"}], ",", "Nothing"}], 
                    "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Length", "[", "indices", "]"}]}], "}"}]}], 
                  "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Flatten", "[", "labels", "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "labelIndices"}], "}"}]}], "]"}], ",", 
               "2"}], "]"}]}], "\[IndentingNewLine]", ")"}], ",", 
           "\[IndentingNewLine]", "True", ",", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{
              RowBox[{"labelAmps", "::", "badmode"}], ",", "labeling"}], 
             "]"}], ";", 
            RowBox[{"Return", "[", "$Failed", "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"amplitudes", "=", 
         RowBox[{"MapThread", "[", 
          RowBox[{"Prepend", ",", 
           RowBox[{"{", 
            RowBox[{"amplitudes", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"colName", "->", "#"}], "&"}], "/@", "labelVals"}]}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"system", "[", 
          RowBox[{"[", "\"\<Amplitudes\>\"", "]"}], "]"}], "=", 
         "amplitudes"}], ";", "\[IndentingNewLine]", "amplitudes"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"labelAmps", "::", "arglen"}], 
     "=", "\"\<The argument supplied to `1` has an incorrect number of \
labels. Expected `2` labels, got `3`. Check that the labeling option is \
correct.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"labelAmps", "::", "badmode"}], 
     "=", "\"\<Unknown labeling mode `1`. Use \\\"Amplitudes\\\" or \
\\\"Amplitude pairs\\\".\>\""}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.9669011887202015`*^9, 3.9669012745156174`*^9}, {
   3.9669013323251762`*^9, 3.9669013815587673`*^9}, {3.966901473106659*^9, 
   3.9669015442741356`*^9}, {3.9669016218463593`*^9, 
   3.9669016334134674`*^9}, {3.96690166947591*^9, 3.966901678282295*^9}, {
   3.9669020585554924`*^9, 3.966902318599533*^9}, {3.966902622136856*^9, 
   3.9669027424117165`*^9}, {3.9669027884671783`*^9, 3.9669027959495544`*^9}, 
   3.966902840748457*^9, {3.9669029957354965`*^9, 3.966903079257332*^9}, {
   3.966903205769722*^9, 3.966903230495531*^9}, {3.9669033024366474`*^9, 
   3.966903322390459*^9}, {3.966903390485405*^9, 3.966903411063265*^9}, 
   3.96695312525581*^9, {3.966955017767254*^9, 3.966955018765972*^9}, {
   3.9669553451994915`*^9, 3.9669554196789246`*^9}, {3.966955494625044*^9, 
   3.96695550607687*^9}, {3.966955597892025*^9, 3.966955612410656*^9}, {
   3.966955758086376*^9, 3.966955787286808*^9}, {3.9669558836779423`*^9, 
   3.9669559251420517`*^9}, {3.96695613230698*^9, 3.9669561921305428`*^9}, {
   3.966956241326475*^9, 3.966956265224781*^9}, {3.966956326843004*^9, 
   3.966956365162483*^9}, {3.966956834394188*^9, 3.966956834592417*^9}, {
   3.967939117803978*^9, 3.9679391283259315`*^9}, {3.967939215195753*^9, 
   3.96793921721492*^9}, {3.967939250097229*^9, 3.967939351048212*^9}, {
   3.9679395553058624`*^9, 3.9679395816748314`*^9}, {3.967939623699623*^9, 
   3.967939624160284*^9}, {3.9679397197061367`*^9, 3.96793974954459*^9}, {
   3.967939855255953*^9, 3.9679399635558147`*^9}, {3.9679401929450874`*^9, 
   3.9679402134845467`*^9}, {3.967940276457573*^9, 3.9679402929658184`*^9}, {
   3.9679403873083363`*^9, 3.9679403898033466`*^9}, {3.9679406651207104`*^9, 
   3.9679406693352604`*^9}, {3.9679408275030174`*^9, 
   3.9679408632338696`*^9}, {3.967940894590847*^9, 3.9679409316479607`*^9}, {
   3.9679409920645103`*^9, 3.9679409936386414`*^9}, {3.967941032286825*^9, 
   3.96794107097394*^9}, 3.967941201933573*^9, {3.9679413166646957`*^9, 
   3.967941317342064*^9}, {3.9679414565456734`*^9, 3.967941458036749*^9}, {
   3.9679415086195316`*^9, 3.967941512173811*^9}, {3.967941757223402*^9, 
   3.9679418003878307`*^9}, 3.967941832148531*^9, 3.967941870736952*^9, {
   3.9679419093570385`*^9, 3.967941910282364*^9}, {3.9679424942737217`*^9, 
   3.967942537129444*^9}, {3.967942657477951*^9, 3.967942659331072*^9}, {
   3.9704111178302345`*^9, 3.970411134349041*^9}, {3.9704111812583847`*^9, 
   3.9704111866021748`*^9}, {3.970411266950676*^9, 3.970411275586977*^9}, 
   3.9704158324650536`*^9, 3.970416813511135*^9, {3.970427524263241*^9, 
   3.9704276089602566`*^9}, {3.970427900363596*^9, 3.970427900643116*^9}, 
   3.970592300593281*^9, {3.9705923899031677`*^9, 
   3.970592391355551*^9}},ExpressionUUID->"d3f0884b-1669-1d49-8918-\
ef4b8bcf66e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Removes", " ", "columns", " ", "from", " ", "amplitudes"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"unlabelAmps", ",", "HoldFirst"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"unlabelAmps", "[", 
      RowBox[{"system_", ",", "colNames_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sysVal", "=", 
          RowBox[{"Evaluate", "[", "system", "]"}]}], ",", "amplitudes"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"amplitudes", "=", 
         RowBox[{"sysVal", "[", 
          RowBox[{"[", "\"\<Amplitudes\>\"", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"amplitudes", "=", 
         RowBox[{
          RowBox[{"KeyDrop", "[", "colNames", "]"}], "/@", "amplitudes"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"system", "[", 
          RowBox[{"[", "\"\<Amplitudes\>\"", "]"}], "]"}], "=", 
         "amplitudes"}], ";", "\[IndentingNewLine]", "amplitudes"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.9669573106874504`*^9, 3.9669573841516323`*^9}, {
   3.9669574352489853`*^9, 3.966957451258032*^9}, 3.966957857186838*^9, {
   3.970411414795679*^9, 3.970411486001116*^9}, {3.970415778740259*^9, 
   3.970415788323038*^9}, 3.970416823213873*^9, {3.9704272885038223`*^9, 
   3.9704273138631535`*^9}, {3.9704273443896694`*^9, 3.970427354302515*^9}, {
   3.9704275017207623`*^9, 3.9704275049322433`*^9}, {3.9704278779208565`*^9, 
   3.970427877999138*^9}, 3.9705922708801003`*^9, {3.9705924014509735`*^9, 
   3.9705924026922264`*^9}},ExpressionUUID->"6b6e045b-b322-8a42-a08a-\
b172d08b7c58"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Prints", " ", "a", " ", "table", " ", "of", " ", "amplitudes"}], 
   " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "printAmps", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"showFactors", "->", "False"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"printAmps", "[", 
      RowBox[{"system_", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"amplitudes", "=", 
          RowBox[{"system", "[", 
           RowBox[{"[", "\"\<Amplitudes\>\"", "]"}], "]"}]}], ",", "indices", 
         ",", "selfConj", ",", "nAmps", ",", 
         RowBox[{"showFactors", "=", 
          RowBox[{"OptionValue", "[", "showFactors", "]"}]}], ",", "signs"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Delete", " ", "self"}], "-", 
         RowBox[{
         "conjugate", " ", "duplicate", " ", "values", " ", "from", " ", 
          "display"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"indices", "=", 
         RowBox[{"amplitudes", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "\"\<Binary indices\>\""}], "]"}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"selfConj", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"indices", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "==", 
              RowBox[{"indices", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "i", ",", 
             "Nothing"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "indices", "]"}]}], "}"}]}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"amplitudes", "[", 
          RowBox[{"[", "selfConj", "]"}], "]"}], "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ListQ", "[", "#", "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], ",", 
           RowBox[{"amplitudes", "[", 
            RowBox[{"[", "selfConj", "]"}], "]"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"nAmps", "=", 
         RowBox[{"numAmps", "[", "system", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", "showFactors"}], ",", 
          RowBox[{"amplitudes", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"KeyDrop", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                
                RowBox[{"\"\<Binary indices\>\"", ",", "\"\<mu\>\"", 
                 ",", "\"\<CG\>\""}], "}"}]}], "]"}], "&"}], "/@", 
            "amplitudes"}]}], ",", "Null"}], "]"}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"show", "/", "hide"}], " ", "internal", " ", "factors", " ",
           "from", " ", "display"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"signs", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"system", "[", 
             RowBox[{"[", "\"\<p factor\>\"", "]"}], "]"}], "==", "1"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<-\>\"", ",", "\"\<+\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<+\>\"", ",", "\"\<-\>\""}], "}"}]}], "]"}]}], ";", 
        "\n", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Amplitude table\>\"", ",", "\"\<\\n\>\"", ",", 
          "\[IndentingNewLine]", "\"\<Number of amplitudes: \>\"", ",", 
          "nAmps", ",", "\"\<\\n\>\"", ",", 
          "\[IndentingNewLine]", "\"\<a/s definitions: \!\(\*SubscriptBox[\(a\
\), \(i\)]\) = \!\(\*SubscriptBox[\(A\), \(i\)]\) \>\"", ",", 
          RowBox[{"signs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], 
          ",", "\"\< \!\(\*SubscriptBox[\(A\), \(l\)]\), \
\!\(\*SubscriptBox[\(s\), \(i\)]\) = \!\(\*SubscriptBox[\(A\), \(i\)]\) \>\"",
           ",", 
          RowBox[{"signs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], 
          ",", "\"\< \!\(\*SubscriptBox[\(A\), \(l\)]\)\>\"", 
          ",", "\"\<\\n\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"TableForm", "[", 
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Values", "/@", "amplitudes"}], ",", 
             RowBox[{"Keys", "[", 
              RowBox[{"amplitudes", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.965473432596567*^9, 3.9654734550842705`*^9}, {
   3.966372443323105*^9, 3.9663725008557014`*^9}, 3.9663761586788464`*^9, {
   3.966376726360489*^9, 3.9663767323160954`*^9}, {3.9668097642557697`*^9, 
   3.9668097822690544`*^9}, {3.9668098301751003`*^9, 
   3.9668098327106647`*^9}, {3.966810667517948*^9, 3.966810703217697*^9}, {
   3.966810748288763*^9, 3.9668108567957287`*^9}, 3.966810921950199*^9, {
   3.9668109692300396`*^9, 3.96681098537603*^9}, {3.966811018593855*^9, 
   3.9668110276720943`*^9}, {3.9668110589644375`*^9, 
   3.9668110658050404`*^9}, {3.9668111883958797`*^9, 
   3.9668111891475086`*^9}, {3.9668138142225266`*^9, 
   3.9668138142769833`*^9}, {3.966864415563225*^9, 3.966864464205868*^9}, {
   3.9668659147146835`*^9, 3.9668659248793316`*^9}, {3.966865983069517*^9, 
   3.9668659953338375`*^9}, {3.9668660518787994`*^9, 
   3.9668660671755333`*^9}, {3.9668669159724026`*^9, 
   3.9668669185225735`*^9}, {3.966867684012005*^9, 3.966867689479477*^9}, {
   3.96686784283354*^9, 3.966867857724476*^9}, {3.9668679391665707`*^9, 
   3.966867944059353*^9}, {3.9668684989058723`*^9, 3.9668685061889515`*^9}, {
   3.967938593343418*^9, 3.967938596031847*^9}, {3.9679386282741585`*^9, 
   3.967938635095724*^9}, {3.9679426853595257`*^9, 3.9679426999136257`*^9}, {
   3.967942834203493*^9, 3.9679428517861404`*^9}, {3.9679429450360413`*^9, 
   3.967942975317333*^9}, {3.96794301118939*^9, 3.96794303320422*^9}, {
   3.9679431232647533`*^9, 3.9679431423638477`*^9}, {3.9679434044269505`*^9, 
   3.9679434430816135`*^9}, {3.967943473249483*^9, 3.9679435484448376`*^9}, {
   3.967944325729889*^9, 3.9679443264299145`*^9}, {3.9704099299555855`*^9, 
   3.9704099655534973`*^9}, {3.970411297295889*^9, 3.9704112981014233`*^9}, 
   3.9704168336495934`*^9, {3.9704169884505615`*^9, 3.9704169917120247`*^9}, {
   3.970417064319544*^9, 3.9704171036806793`*^9}, {3.970417171484785*^9, 
   3.9704172211118145`*^9}, {3.9704172842864056`*^9, 
   3.9704173525077324`*^9}, {3.9704173915158234`*^9, 
   3.9704175124093704`*^9}, {3.9704176097060146`*^9, 
   3.9704176461936226`*^9}, {3.970417769804943*^9, 3.970417806181019*^9}, {
   3.9704178993167496`*^9, 3.9704180517021694`*^9}, {3.9704181631987*^9, 
   3.970418179908949*^9}, 
   3.97059228228866*^9},ExpressionUUID->"652dbf7d-bb33-d140-b908-\
715ec4001dc0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Returns", " ", "a", " ", "list", " ", "of", " ", "the", " ", "orders", " ",
     "of", " ", "breaking"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"listbOrders", "[", 
     RowBox[{"b_", ",", "nOrders_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bVal", "=", "b"}], ",", "bList"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bVal", "=", 
        RowBox[{"b", "/.", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i_", ",", "j_", ",", 
              RowBox[{"k_", ":", "1"}]}], "}"}], ":>", 
            RowBox[{"Span", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Replace", "[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Null", "->", "1"}], ",", 
                  RowBox[{"x_Integer", ":>", 
                   RowBox[{"x", "+", "1"}]}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Replace", "[", 
               RowBox[{"j", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Null", "->", "All"}], ",", 
                  RowBox[{"x_Integer", ":>", 
                   RowBox[{"x", "+", "1"}]}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "k"}], "\[IndentingNewLine]", "]"}]}], ",",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", "i_", "}"}], ":>", 
            RowBox[{"Span", "[", 
             RowBox[{
              RowBox[{"Replace", "[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Null", "->", "1"}], ",", 
                  RowBox[{"x_Integer", ":>", 
                   RowBox[{"x", "+", "1"}]}]}], "}"}]}], "]"}], ",", "All"}], 
             "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"i_Integer", ":>", 
            RowBox[{"Span", "[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"i", "+", "1"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"All", ":>", "All"}]}], "\[IndentingNewLine]", "}"}]}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"bList", "=", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Range", "[", "nOrders", "]"}], "-", "1"}], ")"}], "[", 
           RowBox[{"[", "bVal", "]"}], "]"}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", "bList"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}]}]], "Code",
 CellChangeTimes->{{3.9680843361117973`*^9, 3.968084370695961*^9}, {
   3.9680846370932255`*^9, 3.9680846471375523`*^9}, {3.9680846908460217`*^9, 
   3.9680847203702927`*^9}, {3.9680847780272846`*^9, 3.968084797187502*^9}, {
   3.9680849067398987`*^9, 3.9680849133352547`*^9}, {3.9680851900774937`*^9, 
   3.9680851944428196`*^9}, {3.968086275872921*^9, 3.96808635410203*^9}, 
   3.97041579657226*^9},ExpressionUUID->"835ed265-edbd-0343-ac5a-\
5fe68b21eabd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Returns", " ", "the", " ", "number", " ", "of", " ", "amplitude", " ", 
    "or", " ", "squared", " ", "amplitude", " ", "sum", " ", "rules", " ", 
    "at", " ", "each", " ", "order", " ", "of", " ", "breaking"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "numSRs", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"b", "->", "All"}], ",", 
       RowBox[{"squared", "->", "False"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"numSRs", "[", 
      RowBox[{"system_", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"squared", "=", 
          RowBox[{"OptionValue", "[", "squared", "]"}]}], ",", 
         RowBox[{"b", "=", 
          RowBox[{"OptionValue", "[", "b", "]"}]}], ",", "SRs", ",", 
         "indices", ",", "sublist"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SRs", "=", 
         RowBox[{"If", "[", 
          RowBox[{"squared", ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"KeyExistsQ", "[", 
              RowBox[{"system", ",", "\"\<A2SRs\>\""}], "]"}], ",", 
             RowBox[{"system", "[", 
              RowBox[{"[", "\"\<A2SRs\>\"", "]"}], "]"}], ",", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{"numSRs", "::", "missingkey"}], "]"}], ";", 
               RowBox[{"Return", "[", "$Failed", "]"}]}], ")"}]}], "]"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"system", "[", 
            RowBox[{"[", "\"\<ASRs\>\"", "]"}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"b", "===", "All"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"SRs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "SRs", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"indices", "=", 
             RowBox[{
              RowBox[{"listbOrders", "[", 
               RowBox[{"b", ",", 
                RowBox[{"Length", "[", "SRs", "]"}]}], "]"}], "+", "1"}]}], ";",
             "\[IndentingNewLine]", 
            RowBox[{"sublist", "=", 
             RowBox[{"SRs", "[", 
              RowBox[{"[", "indices", "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"sublist", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "sublist", "]"}]}], "}"}]}], "]"}]}], 
           ")"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"numSRs", "::", "missingkey"}], 
     "=", "\"\<This system does not contain the A2SRs key.\>\""}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{{3.9663766908571625`*^9, 3.966376704246441*^9}, {
   3.966813816656307*^9, 3.9668138167347527`*^9}, {3.968085491120842*^9, 
   3.968085592384865*^9}, {3.968085670014969*^9, 3.968085719030201*^9}, {
   3.9680858250102997`*^9, 3.9680858257356396`*^9}, {3.96808601767914*^9, 
   3.96808603585618*^9}, {3.968153418629385*^9, 3.968153430301914*^9}, {
   3.968153613214527*^9, 3.9681536553550434`*^9}, {3.96815998437488*^9, 
   3.9681599882324333`*^9}, {3.9704127800879135`*^9, 
   3.9704127922383156`*^9}, {3.970415734701311*^9, 3.9704157494820633`*^9}, 
   3.970416846693302*^9, 3.9705922872163677`*^9, {3.970769950639206*^9, 
   3.9707699528637276`*^9}, {3.9707701001818542`*^9, 
   3.9707701584215794`*^9}, {3.9707732547728825`*^9, 3.970773262717575*^9}, {
   3.9707733151564445`*^9, 3.970773353858656*^9}, {3.9707734281210194`*^9, 
   3.9707734330135994`*^9}},ExpressionUUID->"ddaa38d6-bebf-664b-b090-\
3c7a18bc0853"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Prints", " ", "sum", " ", "rules", " ", "at", " ", "each", " ", "order", " ",
     "of", " ", "breaking"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"printSRs", ",", "HoldFirst"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "printSRs", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"showSRs", "->", "True"}], ",", 
       RowBox[{"expandSRs", "->", "True"}], ",", 
       RowBox[{"ampFormat", "->", "\"\<a/s n-tuple\>\""}], ",", 
       RowBox[{"CKM", "->", "False"}], ",", 
       RowBox[{"b", "->", "All"}], ",", 
       RowBox[{"squared", "->", "False"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"printSRs", "[", 
      RowBox[{"system_", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sysVal", "=", 
          RowBox[{"Evaluate", "[", "system", "]"}]}], ",", "SRs", ",", 
         "amplitudes", ",", 
         RowBox[{"showSRs", "=", 
          RowBox[{"OptionValue", "[", "showSRs", "]"}]}], ",", 
         RowBox[{"expandSRs", "=", 
          RowBox[{"OptionValue", "[", "expandSRs", "]"}]}], ",", 
         RowBox[{"ampFormat", "=", 
          RowBox[{"OptionValue", "[", "ampFormat", "]"}]}], ",", 
         RowBox[{"CKM", "=", 
          RowBox[{"OptionValue", "[", "CKM", "]"}]}], ",", 
         RowBox[{"b", "=", 
          RowBox[{"OptionValue", "[", "b", "]"}]}], ",", 
         RowBox[{"squared", "=", 
          RowBox[{"OptionValue", "[", "squared", "]"}]}], ",", "pwr", ",", 
         "physicalAmps", ",", "ampsToVector", ",", "ampVector", ",", 
         "writtenSRs", ",", "bList", ",", "numSRsList", ",", "matForm", ",", 
         "rule"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SRs", "=", 
         RowBox[{"If", "[", 
          RowBox[{"squared", ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"KeyExistsQ", "[", 
              RowBox[{"sysVal", ",", "\"\<A2SRs\>\""}], "]"}], ",", 
             RowBox[{"sysVal", "[", 
              RowBox[{"[", "\"\<A2SRs\>\"", "]"}], "]"}], ",", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{"printSRs", "::", "missingkey"}], "]"}], ";", 
               RowBox[{"Return", "[", "$Failed", "]"}]}], ")"}]}], "]"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"sysVal", "[", 
            RowBox[{"[", "\"\<ASRs\>\"", "]"}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"amplitudes", "=", 
         RowBox[{"sysVal", "[", 
          RowBox[{"[", "\"\<Amplitudes\>\"", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"pwr", "=", 
         RowBox[{"If", "[", 
          RowBox[{"squared", ",", "2", ",", "1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"physicalAmps", "[", 
          RowBox[{"amp_", ",", "asType_", ",", "col_", ",", "CKM_"}], "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"asSign", ",", "CKMfactors"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"asSign", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"SymbolName", "[", "asType", "]"}], 
                "==", "\"\<a\>\""}], ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"+", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"CKMfactors", "=", 
             RowBox[{"If", "[", 
              RowBox[{"CKM", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"amp", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<CKM\>\"", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"amp", "[", 
                  RowBox[{"[", 
                   RowBox[{"\"\<CKM\>\"", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"A", "[", 
               RowBox[{"amp", "[", 
                RowBox[{"[", 
                 RowBox[{"col", ",", "1"}], "]"}], "]"}], "]"}], "/", 
              RowBox[{"CKMfactors", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "+", 
             RowBox[{"asSign", "*", 
              RowBox[{"sysVal", "[", 
               RowBox[{"[", "\"\<p factor\>\"", "]"}], "]"}], "*", 
              RowBox[{
               RowBox[{"A", "[", 
                RowBox[{"amp", "[", 
                 RowBox[{"[", 
                  RowBox[{"col", ",", "2"}], "]"}], "]"}], "]"}], "/", 
               RowBox[{"CKMfactors", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}]}]}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ampsToVector", "[", 
          RowBox[{
          "amps_", ",", "asType_", ",", "ampFormat_", ",", "CKM_", ",", 
           "pwr_"}], "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"vector", ",", "x", ",", "label"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ampFormat", "==", "\"\<A physical\>\""}], "&&", 
               RowBox[{"!", 
                RowBox[{"KeyExistsQ", "[", 
                 RowBox[{
                  RowBox[{"amps", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Processes\>\""}],
                  "]"}]}]}], ",", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{"printSRs", "::", "invalidformat"}], "]"}], ";", 
               RowBox[{"Return", "[", "$Failed", "]"}]}], ",", "Null"}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "label"}], "}"}], "=", 
             RowBox[{"StringSplit", "[", 
              RowBox[{"ampFormat", ",", "WhitespaceCharacter", ",", "2"}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"vector", "=", 
             RowBox[{"Switch", "[", 
              RowBox[{
              "ampFormat", ",", "\[IndentingNewLine]", "\"\<a/s n-tuple\>\"", 
               ",", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"asType", "[", "#", "]"}], "&"}], ",", 
                 RowBox[{"amps", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "\"\<n-tuple\>\""}], "]"}], "]"}]}], 
                "]"}], ",", " ", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"a", "/", "s"}], "-", 
                  RowBox[{"type", " ", "amps", " ", "with", " ", "n"}], "-", 
                  "tuples"}], ";", " ", 
                 RowBox[{"default", " ", "option"}]}], " ", "*)"}], 
               "\[IndentingNewLine]", "\"\<a/s nodes\>\"", ",", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"asType", "[", "#", "]"}], "&"}], ",", 
                 RowBox[{"amps", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "\"\<Node\>\""}], "]"}], "]"}]}], 
                "]"}], ",", " ", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"a", "/", "s"}], "-", 
                 RowBox[{"type", " ", "amps", " ", "with", " ", "nodes"}]}], 
                "*)"}], "\[IndentingNewLine]", "\"\<a/s indices\>\"", ",", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"asType", "[", "#", "]"}], "&"}], ",", 
                 RowBox[{"amps", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "\"\<Binary indices\>\"", ",", "1"}], 
                   "]"}], "]"}]}], "]"}], ",", " ", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{"a", "/", "s"}], "-", 
                 RowBox[{
                 "type", " ", "amps", " ", "with", " ", "numbered", " ", 
                  "subscripts"}]}], " ", "*)"}], 
               "\[IndentingNewLine]", "\"\<A physical\>\"", ",", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"physicalAmps", "[", 
                   RowBox[{
                   "#", ",", "asType", ",", "\"\<Processes\>\"", ",", "CKM"}],
                    "]"}], "&"}], ",", "amps"}], "]"}], ",", " ", 
               RowBox[{"(*", " ", 
                RowBox[{
                "A", " ", "amps", " ", "with", " ", "physical", " ", 
                 "processes"}], " ", "*)"}], 
               "\[IndentingNewLine]", "\"\<A QNs\>\"", ",", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"physicalAmps", "[", 
                   RowBox[{
                   "#", ",", "asType", ",", "\"\<QNs\>\"", ",", "CKM"}], 
                   "]"}], "&"}], ",", "amps"}], "]"}], ",", " ", 
               RowBox[{"(*", " ", 
                RowBox[{"A", " ", "amps", " ", "with", " ", "QNs"}], " ", 
                "*)"}], "\[IndentingNewLine]", "\"\<A indices\>\"", ",", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"physicalAmps", "[", 
                   RowBox[{
                   "#", ",", "asType", ",", "\"\<Binary indices\>\"", ",", 
                    "CKM"}], "]"}], "&"}], ",", "amps"}], "]"}], ",", " ", 
               RowBox[{"(*", " ", 
                RowBox[{
                "A", " ", "amps", " ", "with", " ", "numbered", " ", 
                 "subscripts"}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"_String", "/;", 
                RowBox[{"KeyExistsQ", "[", 
                 RowBox[{
                  RowBox[{"amps", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "label"}], "]"}]}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"x", "==", "\"\<a/s\>\""}], ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"asType", "[", "#", "]"}], "&"}], ",", 
                   RowBox[{"amps", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "label"}], "]"}], "]"}]}], "]"}], ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"physicalAmps", "[", 
                    RowBox[{"#", ",", "asType", ",", "label", ",", "CKM"}], 
                    "]"}], "&"}], ",", "amps"}], "]"}]}], "]"}], ",", " ", 
               RowBox[{"(*", " ", 
                RowBox[{"custom", " ", "amplitude", " ", "format"}], " ", 
                "*)"}], "\[IndentingNewLine]", "_", ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Message", "[", 
                  RowBox[{"printSRs", "::", "invalidformat"}], "]"}], ";", 
                 RowBox[{"Return", "[", "$Failed", "]"}]}], ")"}]}], 
              "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"vector", "^", "pwr"}]}]}], " ", 
          RowBox[{"(*", " ", 
           RowBox[{"pwr", " ", "works", " ", "for", " ", "A", " ", "and", " ", 
            SuperscriptBox["A", "2"]}], " ", "*)"}], "\[IndentingNewLine]", 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"ampVector", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ampsToVector", "[", 
            RowBox[{
            "amplitudes", ",", "a", ",", "ampFormat", ",", "CKM", ",", 
             "pwr"}], "]"}], ",", 
           RowBox[{"ampsToVector", "[", 
            RowBox[{
            "amplitudes", ",", "s", ",", "ampFormat", ",", "CKM", ",", 
             "pwr"}], "]"}]}], "}"}]}], ";", "\n", "\[IndentingNewLine]", 
        RowBox[{"writtenSRs", "=", 
         RowBox[{"If", "[", 
          RowBox[{"expandSRs", ",", "\[IndentingNewLine]", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"#1", "==", 
                 RowBox[{"{", "}"}]}], ",", 
                RowBox[{"{", "}"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"OddQ", "[", 
                   RowBox[{"First", "[", "#2", "]"}], "]"}], ",", 
                  RowBox[{"#1", ".", 
                   RowBox[{"ampVector", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{"#1", ".", 
                   RowBox[{"ampVector", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "]"}], "&"}],
              ",", "SRs"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"#1", "==", 
                 RowBox[{"{", "}"}]}], ",", 
                RowBox[{"{", "}"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"OddQ", "[", 
                   RowBox[{"First", "[", "#2", "]"}], "]"}], ",", 
                  RowBox[{"Prepend", "[", 
                   RowBox[{"#1", ",", 
                    RowBox[{"ampVector", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                  RowBox[{"Prepend", "[", 
                   RowBox[{"#1", ",", 
                    RowBox[{"ampVector", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}],
               "&"}], ",", "SRs"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";",
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Cosmetics", " ", "for", " ", "printing"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"bList", "=", 
         RowBox[{"listbOrders", "[", 
          RowBox[{"b", ",", 
           RowBox[{"Length", "[", "SRs", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"numSRsList", "=", 
         RowBox[{
          RowBox[{"numSRs", "[", 
           RowBox[{"sysVal", ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"FilterRules", "[", 
              RowBox[{
               RowBox[{"{", "opts", "}"}], ",", 
               RowBox[{"Options", "[", "numSRs", "]"}]}], "]"}]}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"bList", "+", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"matForm", ":=", 
         RowBox[{"If", "[", 
          RowBox[{"expandSRs", ",", 
           RowBox[{
            RowBox[{"MatrixForm", "[", "#", "]"}], "&"}], ",", 
           RowBox[{
            RowBox[{"MatrixForm", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
              RowBox[{"TableHeadings", "->", 
               RowBox[{"{", 
                RowBox[{"None", ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], "]"}], "&"}]}],
           "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rule", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ampFormat", "==", "\"\<A physical\>\""}], "||", 
            RowBox[{"ampFormat", "==", "\"\<A QNs\>\""}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"x_Symbol", "[", "i_", "]"}], "/;", 
             RowBox[{"x", "=!=", "List"}]}], ":>", 
            RowBox[{"StringJoin", "[", 
             RowBox[{
              RowBox[{"ToString", "[", "x", "]"}], ",", "\"\<(\>\"", ",", "i",
               ",", "\"\<)\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"x_Symbol", "[", "i_", "]"}], "/;", 
             RowBox[{"x", "=!=", "List"}]}], ":>", 
            RowBox[{"Subscript", "[", 
             RowBox[{"x", ",", "i"}], "]"}]}]}], "\[IndentingNewLine]", 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"showSRs", ",", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"squared", ",", 
              RowBox[{
              "Print", "[", "\"\<Squared amplitude sum rules\>\"", "]"}], ",", 
              RowBox[{"Print", "[", "\"\<Amplitude sum rules\>\"", "]"}]}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{"\"\<b = \>\"", ",", 
                 RowBox[{"bList", "[", 
                  RowBox[{"[", 
                   RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], 
                 ",", "\"\<\\n\>\"", ",", 
                 "\[IndentingNewLine]", "\"\<Number of SRs: \>\"", ",", 
                 RowBox[{"numSRsList", "[", 
                  RowBox[{"[", 
                   RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], 
                 ",", "\"\<\\n\>\"", ",", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#1", "==", 
                    RowBox[{"{", "}"}]}], 
                   ",", "\"\<No sum rules at this order.\>\"", ",", 
                   RowBox[{"matForm", "@", 
                    RowBox[{"If", "[", 
                    RowBox[{"expandSRs", ",", 
                    RowBox[{"#1", "/.", "rule"}], ",", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"1", "->", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/.", "rule"}], ")"}]}]}],
                     "]"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
                "]"}], "&"}], ",", "\[IndentingNewLine]", 
              RowBox[{"writtenSRs", "[", 
               RowBox[{"[", 
                RowBox[{"bList", "+", "1"}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
           ")"}], ",", "\[IndentingNewLine]", "Null"}], "\[IndentingNewLine]",
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"squared", ",", 
          RowBox[{
           RowBox[{"system", "[", 
            RowBox[{"[", "\"\<Formatted A2SRs\>\"", "]"}], "]"}], "=", 
           "writtenSRs"}], ",", 
          RowBox[{
           RowBox[{"system", "[", 
            RowBox[{"[", "\"\<Formatted ASRs\>\"", "]"}], "]"}], "=", 
           "writtenSRs"}]}], "]"}], ";", "\[IndentingNewLine]", 
        "writtenSRs"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"printSRs", "::", "invalidformat"}], 
     "=", "\"\<Invalid amplitude format for this system.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"printSRs", "::", "missingkey"}], 
     "=", "\"\<This system does not contain the A2SRs key.\>\""}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{
  3.966814446295027*^9, {3.966868542602186*^9, 3.9668686126344547`*^9}, {
   3.9668704787549*^9, 3.9668705324335804`*^9}, {3.966870565203169*^9, 
   3.9668705695216465`*^9}, {3.966870649234516*^9, 3.966870650822443*^9}, {
   3.9668707929334164`*^9, 3.9668707932133865`*^9}, {3.966870914463564*^9, 
   3.9668709502375107`*^9}, {3.9668709886255856`*^9, 3.966871064151348*^9}, {
   3.9668711555424004`*^9, 3.966871211417864*^9}, {3.9668713234837112`*^9, 
   3.9668713237269287`*^9}, {3.9668715690460377`*^9, 3.966871572953102*^9}, {
   3.9668902380337963`*^9, 3.9668903609955616`*^9}, {3.9668903983527737`*^9, 
   3.966890446539484*^9}, {3.9668905136448994`*^9, 3.9668905141599445`*^9}, {
   3.966898934546919*^9, 3.966898942086973*^9}, {3.966898978761242*^9, 
   3.9668989845270023`*^9}, {3.966899064399065*^9, 3.9668990896163216`*^9}, {
   3.966902308410652*^9, 3.966902308584013*^9}, {3.9669036066706753`*^9, 
   3.9669037002361164`*^9}, {3.9669037480889797`*^9, 3.966903748464445*^9}, {
   3.9669038783794765`*^9, 3.966903884511999*^9}, {3.9669040230467587`*^9, 
   3.9669040257275143`*^9}, {3.966950317661804*^9, 3.966950347980421*^9}, {
   3.9669503971814175`*^9, 3.966950414860527*^9}, {3.9669504520751553`*^9, 
   3.966950471949354*^9}, {3.966950584393955*^9, 3.966950591171255*^9}, {
   3.966950800040674*^9, 3.966950925253769*^9}, {3.966951051220068*^9, 
   3.9669511081589737`*^9}, {3.96695118680871*^9, 3.9669512189652233`*^9}, {
   3.966951253506544*^9, 3.9669512877654343`*^9}, {3.9669513377794456`*^9, 
   3.966951365680378*^9}, {3.966951503040987*^9, 3.9669515031716824`*^9}, {
   3.966954266986515*^9, 3.9669542812071285`*^9}, {3.9680797516631985`*^9, 
   3.9680797548875885`*^9}, {3.9680798063105927`*^9, 
   3.9680799847927055`*^9}, {3.9680800322335186`*^9, 3.968080073480961*^9}, {
   3.9680801734966087`*^9, 3.968080249647846*^9}, 3.968080309701292*^9, {
   3.968080345145111*^9, 3.968080446223667*^9}, {3.968080508081396*^9, 
   3.968080705009844*^9}, {3.968084878330307*^9, 3.9680848905691376`*^9}, {
   3.9680854046559296`*^9, 3.9680854206782055`*^9}, {3.9681514466234455`*^9, 
   3.968151447121338*^9}, {3.968151480155218*^9, 3.968151480321663*^9}, {
   3.968152115313633*^9, 3.968152122443516*^9}, {3.968152183643421*^9, 
   3.9681521889550667`*^9}, {3.9683568653708363`*^9, 
   3.9683568682534027`*^9}, {3.968356947370125*^9, 3.9683569612540607`*^9}, {
   3.9703510377075577`*^9, 3.9703511558702755`*^9}, {3.970351200346695*^9, 
   3.970351232972128*^9}, {3.9704100731094875`*^9, 3.970410135391844*^9}, {
   3.9704101739620323`*^9, 3.9704101743927917`*^9}, {3.970412194319071*^9, 
   3.9704122342521286`*^9}, 3.9704157151118393`*^9, 3.970416852441826*^9, {
   3.9704269662906494`*^9, 3.9704270156405144`*^9}, {3.9704271862716885`*^9, 
   3.970427190067375*^9}, {3.9704273784025517`*^9, 3.9704273982965336`*^9}, {
   3.970427435628807*^9, 3.970427438244316*^9}, {3.9704277179746265`*^9, 
   3.9704277201981144`*^9}, {3.970537792060808*^9, 3.9705377937695675`*^9}, 
   3.9705922906413574`*^9, {3.9705924292662315`*^9, 3.970592433023018*^9}, {
   3.970768767524624*^9, 3.9707688123702393`*^9}, {3.9707688472373295`*^9, 
   3.9707689311331463`*^9}, {3.970768966404419*^9, 3.970769039818226*^9}, {
   3.9707690958006077`*^9, 3.9707691087880363`*^9}, {3.9707691404668255`*^9, 
   3.9707691409372673`*^9}, {3.9707692530566216`*^9, 3.97076928809342*^9}, {
   3.9707699818791943`*^9, 3.970770012485531*^9}, {3.970770055881895*^9, 
   3.970770074882433*^9}, {3.9707701881351624`*^9, 3.970770303499777*^9}, {
   3.9707703412883205`*^9, 3.970770363790882*^9}, {3.9707704580889874`*^9, 
   3.9707705359601097`*^9}, {3.9707728054232025`*^9, 3.970772845808916*^9}, {
   3.970772887532715*^9, 3.970772932299095*^9}, {3.970772985800724*^9, 
   3.9707730354728565`*^9}, {3.9707730861055202`*^9, 3.970773094226818*^9}, {
   3.970773132346634*^9, 3.970773238544548*^9}, {3.9707733300996914`*^9, 
   3.970773358083103*^9}, {3.970775287333042*^9, 3.9707752999162693`*^9}, {
   3.9707835158168583`*^9, 3.9707835810328903`*^9}, {3.9707836803973274`*^9, 
   3.9707837388677998`*^9}, {3.9707838349313316`*^9, 
   3.9707838355008564`*^9}},ExpressionUUID->"8fb53ad9-48f1-744a-a398-\
94d20fa92c0f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"printSystem", ",", "HoldFirst"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "printSystem", "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"showReps", "->", "True"}], ",", 
       RowBox[{"showAmps", "->", "True"}], ",", 
       RowBox[{"showASRs", "->", "True"}], ",", 
       RowBox[{"showA2SRs", "->", "False"}]}], "}"}], ",", 
     RowBox[{"Options", "[", "printAmps", "]"}], ",", 
     RowBox[{"Options", "[", "printSRs", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"printSystem", "[", 
    RowBox[{"system_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sysVal", "=", 
        RowBox[{"Evaluate", "[", "system", "]"}]}], ",", 
       RowBox[{"showReps", "=", 
        RowBox[{"OptionValue", "[", "showReps", "]"}]}], ",", 
       RowBox[{"showAmps", "=", 
        RowBox[{"OptionValue", "[", "showAmps", "]"}]}], ",", 
       RowBox[{"showASRs", "=", 
        RowBox[{"OptionValue", "[", "showASRs", "]"}]}], ",", 
       RowBox[{"showA2SRs", "=", 
        RowBox[{"OptionValue", "[", "showA2SRs", "]"}]}], ",", "irreps", ",", 
       "writtenSRs"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"irreps", "=", 
       RowBox[{"sysVal", "[", 
        RowBox[{"[", "\"\<Irreps\>\"", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<System: \>\"", ",", 
        RowBox[{"Sort", "@", 
         RowBox[{"Flatten", "@", "irreps"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"showReps", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<-------------------------\>\"", "]"}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Number of would-be doublets: \>\"", ",", 
            RowBox[{"sysVal", "[", 
             RowBox[{"[", "\"\<n doublets\>\"", "]"}], "]"}], 
            ",", "\"\<\\n\>\"", ",", "\[IndentingNewLine]", "\"\<In: \>\"", ",", 
            RowBox[{"irreps", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<\\n\>\"", ",", 
            "\[IndentingNewLine]", "\"\<H: \>\"", ",", 
            RowBox[{"irreps", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<\\n\>\"", ",", 
            "\[IndentingNewLine]", "\"\<Out: \>\"", ",", 
            RowBox[{"irreps", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
          ";"}], "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
        "Null"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"showAmps", ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<-------------------------\>\"", "]"}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"printAmps", "[", 
           RowBox[{"sysVal", ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"FilterRules", "[", 
              RowBox[{
               RowBox[{"{", "opts", "}"}], ",", 
               RowBox[{"Options", "[", "printAmps", "]"}]}], "]"}]}]}], "]"}],
           ";"}], "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
        "Null"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"showASRs", ",", 
        RowBox[{"Print", "[", "\"\<-------------------------\>\"", "]"}], ",",
         "Null"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"printSRs", "[", 
       RowBox[{"sysVal", ",", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "opts", "}"}], ",", 
           RowBox[{"Options", "[", "printSRs", "]"}]}], "]"}]}], ",", 
        RowBox[{"showSRs", "->", "showASRs"}]}], "]"}], ";", "\n", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"showA2SRs", ",", 
        RowBox[{"Print", "[", "\"\<-------------------------\>\"", "]"}], ",",
         "Null"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"printSRs", "[", 
       RowBox[{"sysVal", ",", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "opts", "}"}], ",", 
           RowBox[{"Options", "[", "printSRs", "]"}]}], "]"}]}], ",", 
        RowBox[{"showSRs", "->", "showA2SRs"}], ",", 
        RowBox[{"squared", "->", "True"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"system", "=", "sysVal"}], ";", "\[IndentingNewLine]", 
      "sysVal"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.966814889090042*^9, 3.966814894978321*^9}, {
   3.96681527878512*^9, 3.9668153102505455`*^9}, {3.966815418191635*^9, 
   3.966815434406332*^9}, {3.9668156434774055`*^9, 3.96681564567206*^9}, {
   3.9668667999415607`*^9, 3.966866802386324*^9}, {3.966866848384598*^9, 
   3.966866854910961*^9}, {3.967758097089325*^9, 3.9677580994117985`*^9}, 
   3.97040987909247*^9, 3.970410185464901*^9, {3.970412154051052*^9, 
   3.97041216043474*^9}, {3.970415525905571*^9, 3.970415611763479*^9}, {
   3.970415648732956*^9, 3.9704156507239895`*^9}, {3.9704156894718895`*^9, 
   3.970415690047674*^9}, {3.9704161816526985`*^9, 3.9704161958742085`*^9}, 
   3.9704168709637146`*^9, {3.9704259612706604`*^9, 3.9704259709118977`*^9}, {
   3.970427056774845*^9, 3.9704270768044376`*^9}, {3.970427107407181*^9, 
   3.970427108469879*^9}, 3.9704271396661186`*^9, {3.970427225323435*^9, 
   3.97042722666502*^9}, {3.970427452869808*^9, 3.970427456838503*^9}, {
   3.9704276698674145`*^9, 3.970427696487236*^9}, {3.970537614081049*^9, 
   3.9705376209741573`*^9}, {3.9705381575473175`*^9, 3.9705381587263794`*^9}, 
   3.9705922941301193`*^9, {3.9705924452322903`*^9, 3.97059244613665*^9}, {
   3.970770586921217*^9, 3.970770600845587*^9}, {3.9707706435851364`*^9, 
   3.970770668288851*^9}, {3.970770701835575*^9, 3.9707707027468567`*^9}, {
   3.970770915893675*^9, 
   3.970770965766361*^9}},ExpressionUUID->"2197a131-6a81-2e48-8602-\
9fd79d754800"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "generateA2SRs", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"phys", "->", "False"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateA2SRs", "[", 
    RowBox[{"in_", ",", "h_", ",", "out_", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"system", ",", 
       RowBox[{"phys", "=", 
        RowBox[{"OptionValue", "[", "phys", "]"}]}], ",", "ASRs", ",", 
       "nAmps", ",", "nASRs", ",", "nThetas", ",", "findA2SRMat", ",", 
       "A2SRs", ",", "nA2SRs", ",", "thetaRanks", ",", "xMats"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"system", "=", 
       RowBox[{"generateASRs", "[", 
        RowBox[{"in", ",", "h", ",", "out", ",", 
         RowBox[{"Sequence", "@@", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "opts", "}"}], ",", 
            RowBox[{"Options", "[", "generateASRs", "]"}]}], "]"}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ASRs", "=", 
       RowBox[{"system", "[", 
        RowBox[{"[", "\"\<ASRs\>\"", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nAmps", "=", 
       RowBox[{"numAmps", "[", 
        RowBox[{"system", ",", "True"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nASRs", "=", 
       RowBox[{"system", "[", 
        RowBox[{"[", "\"\<n ASRs\>\"", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nThetas", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"nAmps", "-", "nASRs"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"nAmps", "-", "nASRs", "-", "1"}], ")"}]}], "2"]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Find", " ", "the", " ", 
        SuperscriptBox["A", "2"], "SR", " ", "matrix", " ", "for", " ", "a", " ",
         "given", " ", "ASR", " ", "matrix"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"findA2SRMat", "[", "ASRMat_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ASRMatRR", ",", "pivotCols", ",", "freeCols", ",", "freeMat", ",", 
           "groupedIndices", ",", "indices", ",", "colPairs", ",", "xMat", ",",
            "xMatNullSpace", ",", "groupedA2SR", ",", "thetaRank", ",", 
           "A2SRMat"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ASRMatRR", "=", 
           RowBox[{"RowReduce", "[", "ASRMat", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"pivotCols", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{"#", ",", "1"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "&"}], ",", 
             "ASRMatRR"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"freeCols", "=", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Length", "[", 
               RowBox[{"Transpose", "[", "ASRMatRR", "]"}], "]"}], "]"}], ",",
              "pivotCols"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"freeMat", "=", 
           RowBox[{"ASRMatRR", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "freeCols"}], "]"}], "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "extracts", " ", "the", " ", "free", " ", "cols", " ", "of", " ", 
            "an", " ", "ASR", " ", "matrix"}], " ", "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"groupedIndices", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"pivotCols", ",", "freeCols"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"indices", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{"groupedIndices", ",", "i"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "groupedIndices", "]"}]}], "}"}]}], 
            "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "value", " ", "at", " ", "the", " ", "ith", " ", "position", " ", 
            "gives", " ", "the", " ", "col", " ", "of", " ", "the", " ", 
            "grouped", " ", "matrix", " ", "corresponding", " ", "to", " ", 
            "the", " ", "original", " ", "ith", " ", "col"}], " ", "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Dimensions", "[", "freeMat", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ">=", "2"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"case", " ", "with", " ", "cross", " ", 
              RowBox[{"terms", ":", " ", 
               RowBox[{
               "find", " ", "null", " ", "space", " ", "of", " ", "cross", " ",
                 "terms", " ", "matrix"}]}]}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"colPairs", "=", 
               RowBox[{"Subsets", "[", 
                RowBox[{
                 RowBox[{"Transpose", "[", "freeMat", "]"}], ",", 
                 RowBox[{"{", "2", "}"}]}], "]"}]}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "list", " ", "of", " ", "all", " ", "unique", " ", "column", " ",
                 "pairs"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"xMat", "=", 
               RowBox[{"Transpose", "@", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Times", "@@", "#"}], "&"}], ",", "colPairs"}], 
                 "]"}]}]}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{"cross", " ", "terms", " ", 
                RowBox[{"matrix", ":", " ", 
                 RowBox[{
                 "cols", " ", "are", " ", "pairwise", " ", "multiples", " ", 
                  "of", " ", "free", " ", "cols"}]}]}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"xMatNullSpace", "=", 
               RowBox[{"NullSpace", "[", 
                RowBox[{"Transpose", "@", "xMat"}], "]"}]}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"xMatNullSpace", ".", "xMat"}], " ", "=", " ", 
                  "0"}], ";", " ", 
                 RowBox[{"i", ".", "e", "."}]}], ",", " ", 
                RowBox[{
                "left", " ", "mult", " ", "of", " ", "cross", " ", "terms", " ",
                  "mat", " ", "by", " ", "null", " ", "space", " ", "mat", " ",
                  "sets", " ", "cross", " ", "terms", " ", "to", " ", "0"}]}],
                " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"groupedA2SR", "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"xMatNullSpace", "==", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"Join", "[", 
                  RowBox[{"xMatNullSpace", ",", 
                   RowBox[{"-", 
                    RowBox[{"xMatNullSpace", ".", 
                    RowBox[{"(", 
                    RowBox[{"freeMat", "^", "2"}], ")"}]}]}], ",", "2"}], 
                  "]"}]}], "]"}]}], ";"}], " ", 
             RowBox[{"(*", " ", 
              RowBox[{
              "multiplies", " ", "free", " ", "cols", " ", "by", " ", 
               "xMatNullSpace", " ", "and", " ", "brings", " ", "back", " ", 
               "to", " ", "LHS"}], " ", "*)"}], "\[IndentingNewLine]", ")"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"case", " ", "with", " ", "no", " ", "cross", " ", 
               RowBox[{"terms", ":", " ", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["A", "2"], "SR", " ", "has", " ", "the", " ",
                   "trivial", " ", "form", " ", 
                  SuperscriptBox["s", "2"]}], "-", 
                 SuperscriptBox["s", "2"]}]}]}], " ", "=", " ", "0"}], " ", 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xMat", "=", 
               RowBox[{"{", 
                RowBox[{"{", "0", "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"groupedA2SR", "=", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"IdentityMatrix", "[", 
                  RowBox[{"Length", "[", "ASRMatRR", "]"}], "]"}], ",", 
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{"freeMat", "^", "2"}], ")"}]}], ",", "2"}], 
                "]"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"thetaRank", "=", 
           RowBox[{"MatrixRank", "[", "xMat", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"A2SRMat", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"groupedA2SR", "==", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{"{", "}"}], ",", 
             RowBox[{"Transpose", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Transpose", "[", "groupedA2SR", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"indices", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "indices", "]"}]}], "}"}]}], 
               "]"}]}]}], "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"rearranges", " ", 
            SuperscriptBox["A", "2"], "SR", " ", "mat", " ", "into", " ", 
            "original", " ", "order"}], " ", "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"A2SRMat", ",", "thetaRank", ",", "xMat"}], "}"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"A2SRs", ",", "thetaRanks", ",", "xMats"}], "}"}], "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"Map", "[", 
         RowBox[{"findA2SRMat", ",", "ASRs"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nA2SRs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"A2SRs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "A2SRs", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"AssociateTo", "[", 
       RowBox[{"system", ",", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<n A2SRs\>\"", "->", "nA2SRs"}], ",", 
          RowBox[{"\"\<A2SRs\>\"", "->", "A2SRs"}], ",", 
          RowBox[{"\"\<n thetas\>\"", "->", "nThetas"}], ",", 
          RowBox[{"\"\<Theta ranks\>\"", "->", "thetaRanks"}], ",", 
          RowBox[{"\"\<Thetas\>\"", "->", "xMats"}]}], "|>"}]}], "]"}]}]}], 
    " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
       "**", "**", "**", "**", "**", "**"}], "*", " ", "do", " ", "we", " ", 
      "still", " ", "need", " ", "these", " ", "last", " ", 
      RowBox[{"two", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.9707736412266617`*^9, 
  3.970773664048523*^9}},ExpressionUUID->"177df5f8-cd48-a340-9004-\
9eace09315f3"],

Cell[BoxData[
 RowBox[{"End", "[", "]"}]], "Code",
 CellChangeTimes->{{3.9668144662221203`*^9, 
  3.9668144671096573`*^9}},ExpressionUUID->"2f822f98-bfdf-524f-8f12-\
6e99387e6417"],

Cell[BoxData[
 RowBox[{"EndPackage", "[", "]"}]], "Code",
 CellChangeTimes->{{3.9668144691392384`*^9, 
  3.966814470703684*^9}},ExpressionUUID->"4ce7445f-e663-9240-be66-\
c08c579c3c16"]
},
WindowSize->{960, 532},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
Magnification:>0.8 Inherited,
FrontEndVersion->"14.3 for Microsoft Windows (64-bit) (July 8, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3b3d6322-f340-9d4f-a9bc-15803de649b8"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[554, 20, 445, 8, 40, "Code",ExpressionUUID->"d7755607-cbd2-374e-ad05-ec3d71bc527b"],
Cell[1002, 30, 27290, 423, 2344, "Code",ExpressionUUID->"bfe98629-a847-9e41-92fe-50acce952acb"],
Cell[28295, 455, 286, 9, 68, "Code",ExpressionUUID->"468dc405-e98f-d944-9530-65b2f072ecc9"],
Cell[28584, 466, 294, 6, 40, "Code",ExpressionUUID->"df1742f8-e3ff-e24a-bbb8-d2eca0a18691"],
Cell[28881, 474, 1926, 44, 180, "Code",ExpressionUUID->"05555e7c-a6c2-684b-aab7-5668dfef0f53"],
Cell[30810, 520, 1232, 19, 40, "Code",ExpressionUUID->"aa64c93c-fc27-6843-b787-24caf5262f31"],
Cell[32045, 541, 1961, 48, 152, "Code",ExpressionUUID->"3b920bb5-cb45-0245-be13-ce3c447d075c"],
Cell[34009, 591, 542, 16, 40, "Code",ExpressionUUID->"07bc084b-f324-2545-8e8d-5c83b127bf74"],
Cell[34554, 609, 14121, 311, 433, "Code",ExpressionUUID->"5984c2c7-d660-8343-97c4-7ee157add873"],
Cell[48678, 922, 3058, 70, 236, "Code",ExpressionUUID->"880939d3-8af6-344f-8730-7a3378b3ba8f"],
Cell[51739, 994, 11725, 255, 475, "Code",ExpressionUUID->"b8f38615-5711-ca47-ad73-f311a43e531b"],
Cell[63467, 1251, 1932, 44, 124, "Code",ExpressionUUID->"e76c6bd5-7ca7-904b-9202-4c539d870962"],
Cell[65402, 1297, 8666, 176, 419, "Code",ExpressionUUID->"d3f0884b-1669-1d49-8918-ef4b8bcf66e9"],
Cell[74071, 1475, 1862, 42, 138, "Code",ExpressionUUID->"6b6e045b-b322-8a42-a08a-b172d08b7c58"],
Cell[75936, 1519, 7407, 160, 278, "Code",ExpressionUUID->"652dbf7d-bb33-d140-b908-715ec4001dc0"],
Cell[83346, 1681, 3243, 79, 236, "Code",ExpressionUUID->"835ed265-edbd-0343-ac5a-5fe68b21eabd"],
Cell[86592, 1762, 4372, 101, 250, "Code",ExpressionUUID->"ddaa38d6-bebf-664b-b090-3c7a18bc0853"],
Cell[90967, 1865, 24268, 517, 1003, "Code",ExpressionUUID->"8fb53ad9-48f1-744a-a398-94d20fa92c0f"],
Cell[115238, 2384, 6447, 134, 503, "Code",ExpressionUUID->"2197a131-6a81-2e48-8602-9fd79d754800"],
Cell[121688, 2520, 12463, 285, 679, "Code",ExpressionUUID->"177df5f8-cd48-a340-9004-9eace09315f3"],
Cell[134154, 2807, 180, 4, 40, "Code",ExpressionUUID->"2f822f98-bfdf-524f-8f12-6e99387e6417"],
Cell[134337, 2813, 185, 4, 40, "Code",ExpressionUUID->"4ce7445f-e663-9240-be66-c08c579c3c16"]
}
]
*)

